// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datanode_server.proto

#ifndef PROTOBUF_datanode_5fserver_2eproto__INCLUDED
#define PROTOBUF_datanode_5fserver_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "types.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_datanode_5fserver_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsreplicas_reqImpl();
void InitDefaultsreplicas_req();
void InitDefaultsreplicas_respImpl();
void InitDefaultsreplicas_resp();
void InitDefaultsget_block_reqImpl();
void InitDefaultsget_block_req();
void InitDefaultsget_block_respImpl();
void InitDefaultsget_block_resp();
void InitDefaultssend_block_reqImpl();
void InitDefaultssend_block_req();
void InitDefaultssend_block_respImpl();
void InitDefaultssend_block_resp();
inline void InitDefaults() {
  InitDefaultsreplicas_req();
  InitDefaultsreplicas_resp();
  InitDefaultsget_block_req();
  InitDefaultsget_block_resp();
  InitDefaultssend_block_req();
  InitDefaultssend_block_resp();
}
}  // namespace protobuf_datanode_5fserver_2eproto
namespace bdfs {
class get_block_req;
class get_block_reqDefaultTypeInternal;
extern get_block_reqDefaultTypeInternal _get_block_req_default_instance_;
class get_block_resp;
class get_block_respDefaultTypeInternal;
extern get_block_respDefaultTypeInternal _get_block_resp_default_instance_;
class replicas_req;
class replicas_reqDefaultTypeInternal;
extern replicas_reqDefaultTypeInternal _replicas_req_default_instance_;
class replicas_resp;
class replicas_respDefaultTypeInternal;
extern replicas_respDefaultTypeInternal _replicas_resp_default_instance_;
class send_block_req;
class send_block_reqDefaultTypeInternal;
extern send_block_reqDefaultTypeInternal _send_block_req_default_instance_;
class send_block_resp;
class send_block_respDefaultTypeInternal;
extern send_block_respDefaultTypeInternal _send_block_resp_default_instance_;
}  // namespace bdfs
namespace bdfs {

// ===================================================================

class replicas_req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bdfs.replicas_req) */ {
 public:
  replicas_req();
  virtual ~replicas_req();

  replicas_req(const replicas_req& from);

  inline replicas_req& operator=(const replicas_req& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  replicas_req(replicas_req&& from) noexcept
    : replicas_req() {
    *this = ::std::move(from);
  }

  inline replicas_req& operator=(replicas_req&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const replicas_req& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const replicas_req* internal_default_instance() {
    return reinterpret_cast<const replicas_req*>(
               &_replicas_req_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(replicas_req* other);
  friend void swap(replicas_req& a, replicas_req& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline replicas_req* New() const PROTOBUF_FINAL { return New(NULL); }

  replicas_req* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const replicas_req& from);
  void MergeFrom(const replicas_req& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(replicas_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .bdfs.message_meta meta = 1;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 1;
  const ::bdfs::message_meta& meta() const;
  ::bdfs::message_meta* release_meta();
  ::bdfs::message_meta* mutable_meta();
  void set_allocated_meta(::bdfs::message_meta* meta);

  // @@protoc_insertion_point(class_scope:bdfs.replicas_req)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::bdfs::message_meta* meta_;
  mutable int _cached_size_;
  friend struct ::protobuf_datanode_5fserver_2eproto::TableStruct;
  friend void ::protobuf_datanode_5fserver_2eproto::InitDefaultsreplicas_reqImpl();
};
// -------------------------------------------------------------------

class replicas_resp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bdfs.replicas_resp) */ {
 public:
  replicas_resp();
  virtual ~replicas_resp();

  replicas_resp(const replicas_resp& from);

  inline replicas_resp& operator=(const replicas_resp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  replicas_resp(replicas_resp&& from) noexcept
    : replicas_resp() {
    *this = ::std::move(from);
  }

  inline replicas_resp& operator=(replicas_resp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const replicas_resp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const replicas_resp* internal_default_instance() {
    return reinterpret_cast<const replicas_resp*>(
               &_replicas_resp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(replicas_resp* other);
  friend void swap(replicas_resp& a, replicas_resp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline replicas_resp* New() const PROTOBUF_FINAL { return New(NULL); }

  replicas_resp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const replicas_resp& from);
  void MergeFrom(const replicas_resp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(replicas_resp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .bdfs.message_meta meta = 1;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 1;
  const ::bdfs::message_meta& meta() const;
  ::bdfs::message_meta* release_meta();
  ::bdfs::message_meta* mutable_meta();
  void set_allocated_meta(::bdfs::message_meta* meta);

  // .bdfs.response resp = 2;
  bool has_resp() const;
  void clear_resp();
  static const int kRespFieldNumber = 2;
  const ::bdfs::response& resp() const;
  ::bdfs::response* release_resp();
  ::bdfs::response* mutable_resp();
  void set_allocated_resp(::bdfs::response* resp);

  // @@protoc_insertion_point(class_scope:bdfs.replicas_resp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::bdfs::message_meta* meta_;
  ::bdfs::response* resp_;
  mutable int _cached_size_;
  friend struct ::protobuf_datanode_5fserver_2eproto::TableStruct;
  friend void ::protobuf_datanode_5fserver_2eproto::InitDefaultsreplicas_respImpl();
};
// -------------------------------------------------------------------

class get_block_req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bdfs.get_block_req) */ {
 public:
  get_block_req();
  virtual ~get_block_req();

  get_block_req(const get_block_req& from);

  inline get_block_req& operator=(const get_block_req& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  get_block_req(get_block_req&& from) noexcept
    : get_block_req() {
    *this = ::std::move(from);
  }

  inline get_block_req& operator=(get_block_req&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const get_block_req& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const get_block_req* internal_default_instance() {
    return reinterpret_cast<const get_block_req*>(
               &_get_block_req_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(get_block_req* other);
  friend void swap(get_block_req& a, get_block_req& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline get_block_req* New() const PROTOBUF_FINAL { return New(NULL); }

  get_block_req* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const get_block_req& from);
  void MergeFrom(const get_block_req& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(get_block_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .bdfs.message_meta meta = 1;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 1;
  const ::bdfs::message_meta& meta() const;
  ::bdfs::message_meta* release_meta();
  ::bdfs::message_meta* mutable_meta();
  void set_allocated_meta(::bdfs::message_meta* meta);

  // @@protoc_insertion_point(class_scope:bdfs.get_block_req)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::bdfs::message_meta* meta_;
  mutable int _cached_size_;
  friend struct ::protobuf_datanode_5fserver_2eproto::TableStruct;
  friend void ::protobuf_datanode_5fserver_2eproto::InitDefaultsget_block_reqImpl();
};
// -------------------------------------------------------------------

class get_block_resp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bdfs.get_block_resp) */ {
 public:
  get_block_resp();
  virtual ~get_block_resp();

  get_block_resp(const get_block_resp& from);

  inline get_block_resp& operator=(const get_block_resp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  get_block_resp(get_block_resp&& from) noexcept
    : get_block_resp() {
    *this = ::std::move(from);
  }

  inline get_block_resp& operator=(get_block_resp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const get_block_resp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const get_block_resp* internal_default_instance() {
    return reinterpret_cast<const get_block_resp*>(
               &_get_block_resp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(get_block_resp* other);
  friend void swap(get_block_resp& a, get_block_resp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline get_block_resp* New() const PROTOBUF_FINAL { return New(NULL); }

  get_block_resp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const get_block_resp& from);
  void MergeFrom(const get_block_resp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(get_block_resp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .bdfs.message_meta meta = 1;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 1;
  const ::bdfs::message_meta& meta() const;
  ::bdfs::message_meta* release_meta();
  ::bdfs::message_meta* mutable_meta();
  void set_allocated_meta(::bdfs::message_meta* meta);

  // .bdfs.response resp = 2;
  bool has_resp() const;
  void clear_resp();
  static const int kRespFieldNumber = 2;
  const ::bdfs::response& resp() const;
  ::bdfs::response* release_resp();
  ::bdfs::response* mutable_resp();
  void set_allocated_resp(::bdfs::response* resp);

  // @@protoc_insertion_point(class_scope:bdfs.get_block_resp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::bdfs::message_meta* meta_;
  ::bdfs::response* resp_;
  mutable int _cached_size_;
  friend struct ::protobuf_datanode_5fserver_2eproto::TableStruct;
  friend void ::protobuf_datanode_5fserver_2eproto::InitDefaultsget_block_respImpl();
};
// -------------------------------------------------------------------

class send_block_req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bdfs.send_block_req) */ {
 public:
  send_block_req();
  virtual ~send_block_req();

  send_block_req(const send_block_req& from);

  inline send_block_req& operator=(const send_block_req& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  send_block_req(send_block_req&& from) noexcept
    : send_block_req() {
    *this = ::std::move(from);
  }

  inline send_block_req& operator=(send_block_req&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const send_block_req& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const send_block_req* internal_default_instance() {
    return reinterpret_cast<const send_block_req*>(
               &_send_block_req_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(send_block_req* other);
  friend void swap(send_block_req& a, send_block_req& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline send_block_req* New() const PROTOBUF_FINAL { return New(NULL); }

  send_block_req* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const send_block_req& from);
  void MergeFrom(const send_block_req& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(send_block_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .bdfs.message_meta meta = 1;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 1;
  const ::bdfs::message_meta& meta() const;
  ::bdfs::message_meta* release_meta();
  ::bdfs::message_meta* mutable_meta();
  void set_allocated_meta(::bdfs::message_meta* meta);

  // @@protoc_insertion_point(class_scope:bdfs.send_block_req)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::bdfs::message_meta* meta_;
  mutable int _cached_size_;
  friend struct ::protobuf_datanode_5fserver_2eproto::TableStruct;
  friend void ::protobuf_datanode_5fserver_2eproto::InitDefaultssend_block_reqImpl();
};
// -------------------------------------------------------------------

class send_block_resp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bdfs.send_block_resp) */ {
 public:
  send_block_resp();
  virtual ~send_block_resp();

  send_block_resp(const send_block_resp& from);

  inline send_block_resp& operator=(const send_block_resp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  send_block_resp(send_block_resp&& from) noexcept
    : send_block_resp() {
    *this = ::std::move(from);
  }

  inline send_block_resp& operator=(send_block_resp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const send_block_resp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const send_block_resp* internal_default_instance() {
    return reinterpret_cast<const send_block_resp*>(
               &_send_block_resp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(send_block_resp* other);
  friend void swap(send_block_resp& a, send_block_resp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline send_block_resp* New() const PROTOBUF_FINAL { return New(NULL); }

  send_block_resp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const send_block_resp& from);
  void MergeFrom(const send_block_resp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(send_block_resp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .bdfs.message_meta meta = 1;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 1;
  const ::bdfs::message_meta& meta() const;
  ::bdfs::message_meta* release_meta();
  ::bdfs::message_meta* mutable_meta();
  void set_allocated_meta(::bdfs::message_meta* meta);

  // .bdfs.response resp = 2;
  bool has_resp() const;
  void clear_resp();
  static const int kRespFieldNumber = 2;
  const ::bdfs::response& resp() const;
  ::bdfs::response* release_resp();
  ::bdfs::response* mutable_resp();
  void set_allocated_resp(::bdfs::response* resp);

  // @@protoc_insertion_point(class_scope:bdfs.send_block_resp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::bdfs::message_meta* meta_;
  ::bdfs::response* resp_;
  mutable int _cached_size_;
  friend struct ::protobuf_datanode_5fserver_2eproto::TableStruct;
  friend void ::protobuf_datanode_5fserver_2eproto::InitDefaultssend_block_respImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// replicas_req

// .bdfs.message_meta meta = 1;
inline bool replicas_req::has_meta() const {
  return this != internal_default_instance() && meta_ != NULL;
}
inline const ::bdfs::message_meta& replicas_req::meta() const {
  const ::bdfs::message_meta* p = meta_;
  // @@protoc_insertion_point(field_get:bdfs.replicas_req.meta)
  return p != NULL ? *p : *reinterpret_cast<const ::bdfs::message_meta*>(
      &::bdfs::_message_meta_default_instance_);
}
inline ::bdfs::message_meta* replicas_req::release_meta() {
  // @@protoc_insertion_point(field_release:bdfs.replicas_req.meta)
  
  ::bdfs::message_meta* temp = meta_;
  meta_ = NULL;
  return temp;
}
inline ::bdfs::message_meta* replicas_req::mutable_meta() {
  
  if (meta_ == NULL) {
    meta_ = new ::bdfs::message_meta;
  }
  // @@protoc_insertion_point(field_mutable:bdfs.replicas_req.meta)
  return meta_;
}
inline void replicas_req::set_allocated_meta(::bdfs::message_meta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(meta_);
  }
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    
  } else {
    
  }
  meta_ = meta;
  // @@protoc_insertion_point(field_set_allocated:bdfs.replicas_req.meta)
}

// -------------------------------------------------------------------

// replicas_resp

// .bdfs.message_meta meta = 1;
inline bool replicas_resp::has_meta() const {
  return this != internal_default_instance() && meta_ != NULL;
}
inline const ::bdfs::message_meta& replicas_resp::meta() const {
  const ::bdfs::message_meta* p = meta_;
  // @@protoc_insertion_point(field_get:bdfs.replicas_resp.meta)
  return p != NULL ? *p : *reinterpret_cast<const ::bdfs::message_meta*>(
      &::bdfs::_message_meta_default_instance_);
}
inline ::bdfs::message_meta* replicas_resp::release_meta() {
  // @@protoc_insertion_point(field_release:bdfs.replicas_resp.meta)
  
  ::bdfs::message_meta* temp = meta_;
  meta_ = NULL;
  return temp;
}
inline ::bdfs::message_meta* replicas_resp::mutable_meta() {
  
  if (meta_ == NULL) {
    meta_ = new ::bdfs::message_meta;
  }
  // @@protoc_insertion_point(field_mutable:bdfs.replicas_resp.meta)
  return meta_;
}
inline void replicas_resp::set_allocated_meta(::bdfs::message_meta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(meta_);
  }
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    
  } else {
    
  }
  meta_ = meta;
  // @@protoc_insertion_point(field_set_allocated:bdfs.replicas_resp.meta)
}

// .bdfs.response resp = 2;
inline bool replicas_resp::has_resp() const {
  return this != internal_default_instance() && resp_ != NULL;
}
inline const ::bdfs::response& replicas_resp::resp() const {
  const ::bdfs::response* p = resp_;
  // @@protoc_insertion_point(field_get:bdfs.replicas_resp.resp)
  return p != NULL ? *p : *reinterpret_cast<const ::bdfs::response*>(
      &::bdfs::_response_default_instance_);
}
inline ::bdfs::response* replicas_resp::release_resp() {
  // @@protoc_insertion_point(field_release:bdfs.replicas_resp.resp)
  
  ::bdfs::response* temp = resp_;
  resp_ = NULL;
  return temp;
}
inline ::bdfs::response* replicas_resp::mutable_resp() {
  
  if (resp_ == NULL) {
    resp_ = new ::bdfs::response;
  }
  // @@protoc_insertion_point(field_mutable:bdfs.replicas_resp.resp)
  return resp_;
}
inline void replicas_resp::set_allocated_resp(::bdfs::response* resp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(resp_);
  }
  if (resp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      resp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, resp, submessage_arena);
    }
    
  } else {
    
  }
  resp_ = resp;
  // @@protoc_insertion_point(field_set_allocated:bdfs.replicas_resp.resp)
}

// -------------------------------------------------------------------

// get_block_req

// .bdfs.message_meta meta = 1;
inline bool get_block_req::has_meta() const {
  return this != internal_default_instance() && meta_ != NULL;
}
inline const ::bdfs::message_meta& get_block_req::meta() const {
  const ::bdfs::message_meta* p = meta_;
  // @@protoc_insertion_point(field_get:bdfs.get_block_req.meta)
  return p != NULL ? *p : *reinterpret_cast<const ::bdfs::message_meta*>(
      &::bdfs::_message_meta_default_instance_);
}
inline ::bdfs::message_meta* get_block_req::release_meta() {
  // @@protoc_insertion_point(field_release:bdfs.get_block_req.meta)
  
  ::bdfs::message_meta* temp = meta_;
  meta_ = NULL;
  return temp;
}
inline ::bdfs::message_meta* get_block_req::mutable_meta() {
  
  if (meta_ == NULL) {
    meta_ = new ::bdfs::message_meta;
  }
  // @@protoc_insertion_point(field_mutable:bdfs.get_block_req.meta)
  return meta_;
}
inline void get_block_req::set_allocated_meta(::bdfs::message_meta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(meta_);
  }
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    
  } else {
    
  }
  meta_ = meta;
  // @@protoc_insertion_point(field_set_allocated:bdfs.get_block_req.meta)
}

// -------------------------------------------------------------------

// get_block_resp

// .bdfs.message_meta meta = 1;
inline bool get_block_resp::has_meta() const {
  return this != internal_default_instance() && meta_ != NULL;
}
inline const ::bdfs::message_meta& get_block_resp::meta() const {
  const ::bdfs::message_meta* p = meta_;
  // @@protoc_insertion_point(field_get:bdfs.get_block_resp.meta)
  return p != NULL ? *p : *reinterpret_cast<const ::bdfs::message_meta*>(
      &::bdfs::_message_meta_default_instance_);
}
inline ::bdfs::message_meta* get_block_resp::release_meta() {
  // @@protoc_insertion_point(field_release:bdfs.get_block_resp.meta)
  
  ::bdfs::message_meta* temp = meta_;
  meta_ = NULL;
  return temp;
}
inline ::bdfs::message_meta* get_block_resp::mutable_meta() {
  
  if (meta_ == NULL) {
    meta_ = new ::bdfs::message_meta;
  }
  // @@protoc_insertion_point(field_mutable:bdfs.get_block_resp.meta)
  return meta_;
}
inline void get_block_resp::set_allocated_meta(::bdfs::message_meta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(meta_);
  }
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    
  } else {
    
  }
  meta_ = meta;
  // @@protoc_insertion_point(field_set_allocated:bdfs.get_block_resp.meta)
}

// .bdfs.response resp = 2;
inline bool get_block_resp::has_resp() const {
  return this != internal_default_instance() && resp_ != NULL;
}
inline const ::bdfs::response& get_block_resp::resp() const {
  const ::bdfs::response* p = resp_;
  // @@protoc_insertion_point(field_get:bdfs.get_block_resp.resp)
  return p != NULL ? *p : *reinterpret_cast<const ::bdfs::response*>(
      &::bdfs::_response_default_instance_);
}
inline ::bdfs::response* get_block_resp::release_resp() {
  // @@protoc_insertion_point(field_release:bdfs.get_block_resp.resp)
  
  ::bdfs::response* temp = resp_;
  resp_ = NULL;
  return temp;
}
inline ::bdfs::response* get_block_resp::mutable_resp() {
  
  if (resp_ == NULL) {
    resp_ = new ::bdfs::response;
  }
  // @@protoc_insertion_point(field_mutable:bdfs.get_block_resp.resp)
  return resp_;
}
inline void get_block_resp::set_allocated_resp(::bdfs::response* resp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(resp_);
  }
  if (resp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      resp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, resp, submessage_arena);
    }
    
  } else {
    
  }
  resp_ = resp;
  // @@protoc_insertion_point(field_set_allocated:bdfs.get_block_resp.resp)
}

// -------------------------------------------------------------------

// send_block_req

// .bdfs.message_meta meta = 1;
inline bool send_block_req::has_meta() const {
  return this != internal_default_instance() && meta_ != NULL;
}
inline const ::bdfs::message_meta& send_block_req::meta() const {
  const ::bdfs::message_meta* p = meta_;
  // @@protoc_insertion_point(field_get:bdfs.send_block_req.meta)
  return p != NULL ? *p : *reinterpret_cast<const ::bdfs::message_meta*>(
      &::bdfs::_message_meta_default_instance_);
}
inline ::bdfs::message_meta* send_block_req::release_meta() {
  // @@protoc_insertion_point(field_release:bdfs.send_block_req.meta)
  
  ::bdfs::message_meta* temp = meta_;
  meta_ = NULL;
  return temp;
}
inline ::bdfs::message_meta* send_block_req::mutable_meta() {
  
  if (meta_ == NULL) {
    meta_ = new ::bdfs::message_meta;
  }
  // @@protoc_insertion_point(field_mutable:bdfs.send_block_req.meta)
  return meta_;
}
inline void send_block_req::set_allocated_meta(::bdfs::message_meta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(meta_);
  }
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    
  } else {
    
  }
  meta_ = meta;
  // @@protoc_insertion_point(field_set_allocated:bdfs.send_block_req.meta)
}

// -------------------------------------------------------------------

// send_block_resp

// .bdfs.message_meta meta = 1;
inline bool send_block_resp::has_meta() const {
  return this != internal_default_instance() && meta_ != NULL;
}
inline const ::bdfs::message_meta& send_block_resp::meta() const {
  const ::bdfs::message_meta* p = meta_;
  // @@protoc_insertion_point(field_get:bdfs.send_block_resp.meta)
  return p != NULL ? *p : *reinterpret_cast<const ::bdfs::message_meta*>(
      &::bdfs::_message_meta_default_instance_);
}
inline ::bdfs::message_meta* send_block_resp::release_meta() {
  // @@protoc_insertion_point(field_release:bdfs.send_block_resp.meta)
  
  ::bdfs::message_meta* temp = meta_;
  meta_ = NULL;
  return temp;
}
inline ::bdfs::message_meta* send_block_resp::mutable_meta() {
  
  if (meta_ == NULL) {
    meta_ = new ::bdfs::message_meta;
  }
  // @@protoc_insertion_point(field_mutable:bdfs.send_block_resp.meta)
  return meta_;
}
inline void send_block_resp::set_allocated_meta(::bdfs::message_meta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(meta_);
  }
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    
  } else {
    
  }
  meta_ = meta;
  // @@protoc_insertion_point(field_set_allocated:bdfs.send_block_resp.meta)
}

// .bdfs.response resp = 2;
inline bool send_block_resp::has_resp() const {
  return this != internal_default_instance() && resp_ != NULL;
}
inline const ::bdfs::response& send_block_resp::resp() const {
  const ::bdfs::response* p = resp_;
  // @@protoc_insertion_point(field_get:bdfs.send_block_resp.resp)
  return p != NULL ? *p : *reinterpret_cast<const ::bdfs::response*>(
      &::bdfs::_response_default_instance_);
}
inline ::bdfs::response* send_block_resp::release_resp() {
  // @@protoc_insertion_point(field_release:bdfs.send_block_resp.resp)
  
  ::bdfs::response* temp = resp_;
  resp_ = NULL;
  return temp;
}
inline ::bdfs::response* send_block_resp::mutable_resp() {
  
  if (resp_ == NULL) {
    resp_ = new ::bdfs::response;
  }
  // @@protoc_insertion_point(field_mutable:bdfs.send_block_resp.resp)
  return resp_;
}
inline void send_block_resp::set_allocated_resp(::bdfs::response* resp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(resp_);
  }
  if (resp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      resp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, resp, submessage_arena);
    }
    
  } else {
    
  }
  resp_ = resp;
  // @@protoc_insertion_point(field_set_allocated:bdfs.send_block_resp.resp)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace bdfs

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_datanode_5fserver_2eproto__INCLUDED
