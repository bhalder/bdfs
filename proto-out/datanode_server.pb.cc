// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datanode_server.proto

#include "datanode_server.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace bdfs {
class replicas_reqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<replicas_req>
      _instance;
} _replicas_req_default_instance_;
class replicas_respDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<replicas_resp>
      _instance;
} _replicas_resp_default_instance_;
class get_block_reqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<get_block_req>
      _instance;
} _get_block_req_default_instance_;
class get_block_respDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<get_block_resp>
      _instance;
} _get_block_resp_default_instance_;
class send_block_reqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<send_block_req>
      _instance;
} _send_block_req_default_instance_;
class send_block_respDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<send_block_resp>
      _instance;
} _send_block_resp_default_instance_;
}  // namespace bdfs
namespace protobuf_datanode_5fserver_2eproto {
void InitDefaultsreplicas_reqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_types_2eproto::InitDefaultsmessage_meta();
  {
    void* ptr = &::bdfs::_replicas_req_default_instance_;
    new (ptr) ::bdfs::replicas_req();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bdfs::replicas_req::InitAsDefaultInstance();
}

void InitDefaultsreplicas_req() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsreplicas_reqImpl);
}

void InitDefaultsreplicas_respImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_types_2eproto::InitDefaultsmessage_meta();
  protobuf_types_2eproto::InitDefaultsresponse();
  {
    void* ptr = &::bdfs::_replicas_resp_default_instance_;
    new (ptr) ::bdfs::replicas_resp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bdfs::replicas_resp::InitAsDefaultInstance();
}

void InitDefaultsreplicas_resp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsreplicas_respImpl);
}

void InitDefaultsget_block_reqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_types_2eproto::InitDefaultsmessage_meta();
  {
    void* ptr = &::bdfs::_get_block_req_default_instance_;
    new (ptr) ::bdfs::get_block_req();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bdfs::get_block_req::InitAsDefaultInstance();
}

void InitDefaultsget_block_req() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsget_block_reqImpl);
}

void InitDefaultsget_block_respImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_types_2eproto::InitDefaultsmessage_meta();
  protobuf_types_2eproto::InitDefaultsresponse();
  {
    void* ptr = &::bdfs::_get_block_resp_default_instance_;
    new (ptr) ::bdfs::get_block_resp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bdfs::get_block_resp::InitAsDefaultInstance();
}

void InitDefaultsget_block_resp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsget_block_respImpl);
}

void InitDefaultssend_block_reqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_types_2eproto::InitDefaultsmessage_meta();
  {
    void* ptr = &::bdfs::_send_block_req_default_instance_;
    new (ptr) ::bdfs::send_block_req();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bdfs::send_block_req::InitAsDefaultInstance();
}

void InitDefaultssend_block_req() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultssend_block_reqImpl);
}

void InitDefaultssend_block_respImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_types_2eproto::InitDefaultsmessage_meta();
  protobuf_types_2eproto::InitDefaultsresponse();
  {
    void* ptr = &::bdfs::_send_block_resp_default_instance_;
    new (ptr) ::bdfs::send_block_resp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bdfs::send_block_resp::InitAsDefaultInstance();
}

void InitDefaultssend_block_resp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultssend_block_respImpl);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::replicas_req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::replicas_req, meta_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::replicas_resp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::replicas_resp, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::replicas_resp, resp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::get_block_req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::get_block_req, meta_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::get_block_resp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::get_block_resp, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::get_block_resp, resp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::send_block_req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::send_block_req, meta_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::send_block_resp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::send_block_resp, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::send_block_resp, resp_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::bdfs::replicas_req)},
  { 6, -1, sizeof(::bdfs::replicas_resp)},
  { 13, -1, sizeof(::bdfs::get_block_req)},
  { 19, -1, sizeof(::bdfs::get_block_resp)},
  { 26, -1, sizeof(::bdfs::send_block_req)},
  { 32, -1, sizeof(::bdfs::send_block_resp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::bdfs::_replicas_req_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bdfs::_replicas_resp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bdfs::_get_block_req_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bdfs::_get_block_resp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bdfs::_send_block_req_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bdfs::_send_block_resp_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "datanode_server.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025datanode_server.proto\022\004bdfs\032\013types.pro"
      "to\"0\n\014replicas_req\022 \n\004meta\030\001 \001(\0132\022.bdfs."
      "message_meta\"O\n\rreplicas_resp\022 \n\004meta\030\001 "
      "\001(\0132\022.bdfs.message_meta\022\034\n\004resp\030\002 \001(\0132\016."
      "bdfs.response\"1\n\rget_block_req\022 \n\004meta\030\001"
      " \001(\0132\022.bdfs.message_meta\"P\n\016get_block_re"
      "sp\022 \n\004meta\030\001 \001(\0132\022.bdfs.message_meta\022\034\n\004"
      "resp\030\002 \001(\0132\016.bdfs.response\"2\n\016send_block"
      "_req\022 \n\004meta\030\001 \001(\0132\022.bdfs.message_meta\"Q"
      "\n\017send_block_resp\022 \n\004meta\030\001 \001(\0132\022.bdfs.m"
      "essage_meta\022\034\n\004resp\030\002 \001(\0132\016.bdfs.respons"
      "e2\275\001\n\017datanode_server\0227\n\014get_replicas\022\022."
      "bdfs.replicas_req\032\023.bdfs.replicas_resp\0226"
      "\n\tget_block\022\023.bdfs.get_block_req\032\024.bdfs."
      "get_block_resp\0229\n\nsend_block\022\024.bdfs.send"
      "_block_req\032\025.bdfs.send_block_respb\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 641);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "datanode_server.proto", &protobuf_RegisterTypes);
  ::protobuf_types_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_datanode_5fserver_2eproto
namespace bdfs {

// ===================================================================

void replicas_req::InitAsDefaultInstance() {
  ::bdfs::_replicas_req_default_instance_._instance.get_mutable()->meta_ = const_cast< ::bdfs::message_meta*>(
      ::bdfs::message_meta::internal_default_instance());
}
void replicas_req::clear_meta() {
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int replicas_req::kMetaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

replicas_req::replicas_req()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_datanode_5fserver_2eproto::InitDefaultsreplicas_req();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bdfs.replicas_req)
}
replicas_req::replicas_req(const replicas_req& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_meta()) {
    meta_ = new ::bdfs::message_meta(*from.meta_);
  } else {
    meta_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:bdfs.replicas_req)
}

void replicas_req::SharedCtor() {
  meta_ = NULL;
  _cached_size_ = 0;
}

replicas_req::~replicas_req() {
  // @@protoc_insertion_point(destructor:bdfs.replicas_req)
  SharedDtor();
}

void replicas_req::SharedDtor() {
  if (this != internal_default_instance()) delete meta_;
}

void replicas_req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* replicas_req::descriptor() {
  ::protobuf_datanode_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const replicas_req& replicas_req::default_instance() {
  ::protobuf_datanode_5fserver_2eproto::InitDefaultsreplicas_req();
  return *internal_default_instance();
}

replicas_req* replicas_req::New(::google::protobuf::Arena* arena) const {
  replicas_req* n = new replicas_req;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void replicas_req::Clear() {
// @@protoc_insertion_point(message_clear_start:bdfs.replicas_req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
  _internal_metadata_.Clear();
}

bool replicas_req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bdfs.replicas_req)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bdfs.message_meta meta = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bdfs.replicas_req)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bdfs.replicas_req)
  return false;
#undef DO_
}

void replicas_req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bdfs.replicas_req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bdfs.message_meta meta = 1;
  if (this->has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->meta_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bdfs.replicas_req)
}

::google::protobuf::uint8* replicas_req::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bdfs.replicas_req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bdfs.message_meta meta = 1;
  if (this->has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->meta_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bdfs.replicas_req)
  return target;
}

size_t replicas_req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bdfs.replicas_req)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .bdfs.message_meta meta = 1;
  if (this->has_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->meta_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void replicas_req::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bdfs.replicas_req)
  GOOGLE_DCHECK_NE(&from, this);
  const replicas_req* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const replicas_req>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bdfs.replicas_req)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bdfs.replicas_req)
    MergeFrom(*source);
  }
}

void replicas_req::MergeFrom(const replicas_req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bdfs.replicas_req)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_meta()) {
    mutable_meta()->::bdfs::message_meta::MergeFrom(from.meta());
  }
}

void replicas_req::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bdfs.replicas_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void replicas_req::CopyFrom(const replicas_req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bdfs.replicas_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool replicas_req::IsInitialized() const {
  return true;
}

void replicas_req::Swap(replicas_req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void replicas_req::InternalSwap(replicas_req* other) {
  using std::swap;
  swap(meta_, other->meta_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata replicas_req::GetMetadata() const {
  protobuf_datanode_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void replicas_resp::InitAsDefaultInstance() {
  ::bdfs::_replicas_resp_default_instance_._instance.get_mutable()->meta_ = const_cast< ::bdfs::message_meta*>(
      ::bdfs::message_meta::internal_default_instance());
  ::bdfs::_replicas_resp_default_instance_._instance.get_mutable()->resp_ = const_cast< ::bdfs::response*>(
      ::bdfs::response::internal_default_instance());
}
void replicas_resp::clear_meta() {
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
}
void replicas_resp::clear_resp() {
  if (GetArenaNoVirtual() == NULL && resp_ != NULL) {
    delete resp_;
  }
  resp_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int replicas_resp::kMetaFieldNumber;
const int replicas_resp::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

replicas_resp::replicas_resp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_datanode_5fserver_2eproto::InitDefaultsreplicas_resp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bdfs.replicas_resp)
}
replicas_resp::replicas_resp(const replicas_resp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_meta()) {
    meta_ = new ::bdfs::message_meta(*from.meta_);
  } else {
    meta_ = NULL;
  }
  if (from.has_resp()) {
    resp_ = new ::bdfs::response(*from.resp_);
  } else {
    resp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:bdfs.replicas_resp)
}

void replicas_resp::SharedCtor() {
  ::memset(&meta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resp_) -
      reinterpret_cast<char*>(&meta_)) + sizeof(resp_));
  _cached_size_ = 0;
}

replicas_resp::~replicas_resp() {
  // @@protoc_insertion_point(destructor:bdfs.replicas_resp)
  SharedDtor();
}

void replicas_resp::SharedDtor() {
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete resp_;
}

void replicas_resp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* replicas_resp::descriptor() {
  ::protobuf_datanode_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const replicas_resp& replicas_resp::default_instance() {
  ::protobuf_datanode_5fserver_2eproto::InitDefaultsreplicas_resp();
  return *internal_default_instance();
}

replicas_resp* replicas_resp::New(::google::protobuf::Arena* arena) const {
  replicas_resp* n = new replicas_resp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void replicas_resp::Clear() {
// @@protoc_insertion_point(message_clear_start:bdfs.replicas_resp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
  if (GetArenaNoVirtual() == NULL && resp_ != NULL) {
    delete resp_;
  }
  resp_ = NULL;
  _internal_metadata_.Clear();
}

bool replicas_resp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bdfs.replicas_resp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bdfs.message_meta meta = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bdfs.response resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bdfs.replicas_resp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bdfs.replicas_resp)
  return false;
#undef DO_
}

void replicas_resp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bdfs.replicas_resp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bdfs.message_meta meta = 1;
  if (this->has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->meta_, output);
  }

  // .bdfs.response resp = 2;
  if (this->has_resp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->resp_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bdfs.replicas_resp)
}

::google::protobuf::uint8* replicas_resp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bdfs.replicas_resp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bdfs.message_meta meta = 1;
  if (this->has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->meta_, deterministic, target);
  }

  // .bdfs.response resp = 2;
  if (this->has_resp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->resp_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bdfs.replicas_resp)
  return target;
}

size_t replicas_resp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bdfs.replicas_resp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .bdfs.message_meta meta = 1;
  if (this->has_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->meta_);
  }

  // .bdfs.response resp = 2;
  if (this->has_resp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->resp_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void replicas_resp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bdfs.replicas_resp)
  GOOGLE_DCHECK_NE(&from, this);
  const replicas_resp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const replicas_resp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bdfs.replicas_resp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bdfs.replicas_resp)
    MergeFrom(*source);
  }
}

void replicas_resp::MergeFrom(const replicas_resp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bdfs.replicas_resp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_meta()) {
    mutable_meta()->::bdfs::message_meta::MergeFrom(from.meta());
  }
  if (from.has_resp()) {
    mutable_resp()->::bdfs::response::MergeFrom(from.resp());
  }
}

void replicas_resp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bdfs.replicas_resp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void replicas_resp::CopyFrom(const replicas_resp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bdfs.replicas_resp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool replicas_resp::IsInitialized() const {
  return true;
}

void replicas_resp::Swap(replicas_resp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void replicas_resp::InternalSwap(replicas_resp* other) {
  using std::swap;
  swap(meta_, other->meta_);
  swap(resp_, other->resp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata replicas_resp::GetMetadata() const {
  protobuf_datanode_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void get_block_req::InitAsDefaultInstance() {
  ::bdfs::_get_block_req_default_instance_._instance.get_mutable()->meta_ = const_cast< ::bdfs::message_meta*>(
      ::bdfs::message_meta::internal_default_instance());
}
void get_block_req::clear_meta() {
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int get_block_req::kMetaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

get_block_req::get_block_req()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_datanode_5fserver_2eproto::InitDefaultsget_block_req();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bdfs.get_block_req)
}
get_block_req::get_block_req(const get_block_req& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_meta()) {
    meta_ = new ::bdfs::message_meta(*from.meta_);
  } else {
    meta_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:bdfs.get_block_req)
}

void get_block_req::SharedCtor() {
  meta_ = NULL;
  _cached_size_ = 0;
}

get_block_req::~get_block_req() {
  // @@protoc_insertion_point(destructor:bdfs.get_block_req)
  SharedDtor();
}

void get_block_req::SharedDtor() {
  if (this != internal_default_instance()) delete meta_;
}

void get_block_req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* get_block_req::descriptor() {
  ::protobuf_datanode_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const get_block_req& get_block_req::default_instance() {
  ::protobuf_datanode_5fserver_2eproto::InitDefaultsget_block_req();
  return *internal_default_instance();
}

get_block_req* get_block_req::New(::google::protobuf::Arena* arena) const {
  get_block_req* n = new get_block_req;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void get_block_req::Clear() {
// @@protoc_insertion_point(message_clear_start:bdfs.get_block_req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
  _internal_metadata_.Clear();
}

bool get_block_req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bdfs.get_block_req)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bdfs.message_meta meta = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bdfs.get_block_req)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bdfs.get_block_req)
  return false;
#undef DO_
}

void get_block_req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bdfs.get_block_req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bdfs.message_meta meta = 1;
  if (this->has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->meta_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bdfs.get_block_req)
}

::google::protobuf::uint8* get_block_req::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bdfs.get_block_req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bdfs.message_meta meta = 1;
  if (this->has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->meta_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bdfs.get_block_req)
  return target;
}

size_t get_block_req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bdfs.get_block_req)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .bdfs.message_meta meta = 1;
  if (this->has_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->meta_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void get_block_req::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bdfs.get_block_req)
  GOOGLE_DCHECK_NE(&from, this);
  const get_block_req* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const get_block_req>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bdfs.get_block_req)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bdfs.get_block_req)
    MergeFrom(*source);
  }
}

void get_block_req::MergeFrom(const get_block_req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bdfs.get_block_req)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_meta()) {
    mutable_meta()->::bdfs::message_meta::MergeFrom(from.meta());
  }
}

void get_block_req::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bdfs.get_block_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void get_block_req::CopyFrom(const get_block_req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bdfs.get_block_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool get_block_req::IsInitialized() const {
  return true;
}

void get_block_req::Swap(get_block_req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void get_block_req::InternalSwap(get_block_req* other) {
  using std::swap;
  swap(meta_, other->meta_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata get_block_req::GetMetadata() const {
  protobuf_datanode_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void get_block_resp::InitAsDefaultInstance() {
  ::bdfs::_get_block_resp_default_instance_._instance.get_mutable()->meta_ = const_cast< ::bdfs::message_meta*>(
      ::bdfs::message_meta::internal_default_instance());
  ::bdfs::_get_block_resp_default_instance_._instance.get_mutable()->resp_ = const_cast< ::bdfs::response*>(
      ::bdfs::response::internal_default_instance());
}
void get_block_resp::clear_meta() {
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
}
void get_block_resp::clear_resp() {
  if (GetArenaNoVirtual() == NULL && resp_ != NULL) {
    delete resp_;
  }
  resp_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int get_block_resp::kMetaFieldNumber;
const int get_block_resp::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

get_block_resp::get_block_resp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_datanode_5fserver_2eproto::InitDefaultsget_block_resp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bdfs.get_block_resp)
}
get_block_resp::get_block_resp(const get_block_resp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_meta()) {
    meta_ = new ::bdfs::message_meta(*from.meta_);
  } else {
    meta_ = NULL;
  }
  if (from.has_resp()) {
    resp_ = new ::bdfs::response(*from.resp_);
  } else {
    resp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:bdfs.get_block_resp)
}

void get_block_resp::SharedCtor() {
  ::memset(&meta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resp_) -
      reinterpret_cast<char*>(&meta_)) + sizeof(resp_));
  _cached_size_ = 0;
}

get_block_resp::~get_block_resp() {
  // @@protoc_insertion_point(destructor:bdfs.get_block_resp)
  SharedDtor();
}

void get_block_resp::SharedDtor() {
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete resp_;
}

void get_block_resp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* get_block_resp::descriptor() {
  ::protobuf_datanode_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const get_block_resp& get_block_resp::default_instance() {
  ::protobuf_datanode_5fserver_2eproto::InitDefaultsget_block_resp();
  return *internal_default_instance();
}

get_block_resp* get_block_resp::New(::google::protobuf::Arena* arena) const {
  get_block_resp* n = new get_block_resp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void get_block_resp::Clear() {
// @@protoc_insertion_point(message_clear_start:bdfs.get_block_resp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
  if (GetArenaNoVirtual() == NULL && resp_ != NULL) {
    delete resp_;
  }
  resp_ = NULL;
  _internal_metadata_.Clear();
}

bool get_block_resp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bdfs.get_block_resp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bdfs.message_meta meta = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bdfs.response resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bdfs.get_block_resp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bdfs.get_block_resp)
  return false;
#undef DO_
}

void get_block_resp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bdfs.get_block_resp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bdfs.message_meta meta = 1;
  if (this->has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->meta_, output);
  }

  // .bdfs.response resp = 2;
  if (this->has_resp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->resp_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bdfs.get_block_resp)
}

::google::protobuf::uint8* get_block_resp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bdfs.get_block_resp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bdfs.message_meta meta = 1;
  if (this->has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->meta_, deterministic, target);
  }

  // .bdfs.response resp = 2;
  if (this->has_resp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->resp_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bdfs.get_block_resp)
  return target;
}

size_t get_block_resp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bdfs.get_block_resp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .bdfs.message_meta meta = 1;
  if (this->has_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->meta_);
  }

  // .bdfs.response resp = 2;
  if (this->has_resp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->resp_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void get_block_resp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bdfs.get_block_resp)
  GOOGLE_DCHECK_NE(&from, this);
  const get_block_resp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const get_block_resp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bdfs.get_block_resp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bdfs.get_block_resp)
    MergeFrom(*source);
  }
}

void get_block_resp::MergeFrom(const get_block_resp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bdfs.get_block_resp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_meta()) {
    mutable_meta()->::bdfs::message_meta::MergeFrom(from.meta());
  }
  if (from.has_resp()) {
    mutable_resp()->::bdfs::response::MergeFrom(from.resp());
  }
}

void get_block_resp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bdfs.get_block_resp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void get_block_resp::CopyFrom(const get_block_resp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bdfs.get_block_resp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool get_block_resp::IsInitialized() const {
  return true;
}

void get_block_resp::Swap(get_block_resp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void get_block_resp::InternalSwap(get_block_resp* other) {
  using std::swap;
  swap(meta_, other->meta_);
  swap(resp_, other->resp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata get_block_resp::GetMetadata() const {
  protobuf_datanode_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void send_block_req::InitAsDefaultInstance() {
  ::bdfs::_send_block_req_default_instance_._instance.get_mutable()->meta_ = const_cast< ::bdfs::message_meta*>(
      ::bdfs::message_meta::internal_default_instance());
}
void send_block_req::clear_meta() {
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int send_block_req::kMetaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

send_block_req::send_block_req()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_datanode_5fserver_2eproto::InitDefaultssend_block_req();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bdfs.send_block_req)
}
send_block_req::send_block_req(const send_block_req& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_meta()) {
    meta_ = new ::bdfs::message_meta(*from.meta_);
  } else {
    meta_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:bdfs.send_block_req)
}

void send_block_req::SharedCtor() {
  meta_ = NULL;
  _cached_size_ = 0;
}

send_block_req::~send_block_req() {
  // @@protoc_insertion_point(destructor:bdfs.send_block_req)
  SharedDtor();
}

void send_block_req::SharedDtor() {
  if (this != internal_default_instance()) delete meta_;
}

void send_block_req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* send_block_req::descriptor() {
  ::protobuf_datanode_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const send_block_req& send_block_req::default_instance() {
  ::protobuf_datanode_5fserver_2eproto::InitDefaultssend_block_req();
  return *internal_default_instance();
}

send_block_req* send_block_req::New(::google::protobuf::Arena* arena) const {
  send_block_req* n = new send_block_req;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void send_block_req::Clear() {
// @@protoc_insertion_point(message_clear_start:bdfs.send_block_req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
  _internal_metadata_.Clear();
}

bool send_block_req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bdfs.send_block_req)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bdfs.message_meta meta = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bdfs.send_block_req)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bdfs.send_block_req)
  return false;
#undef DO_
}

void send_block_req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bdfs.send_block_req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bdfs.message_meta meta = 1;
  if (this->has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->meta_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bdfs.send_block_req)
}

::google::protobuf::uint8* send_block_req::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bdfs.send_block_req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bdfs.message_meta meta = 1;
  if (this->has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->meta_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bdfs.send_block_req)
  return target;
}

size_t send_block_req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bdfs.send_block_req)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .bdfs.message_meta meta = 1;
  if (this->has_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->meta_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void send_block_req::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bdfs.send_block_req)
  GOOGLE_DCHECK_NE(&from, this);
  const send_block_req* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const send_block_req>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bdfs.send_block_req)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bdfs.send_block_req)
    MergeFrom(*source);
  }
}

void send_block_req::MergeFrom(const send_block_req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bdfs.send_block_req)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_meta()) {
    mutable_meta()->::bdfs::message_meta::MergeFrom(from.meta());
  }
}

void send_block_req::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bdfs.send_block_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void send_block_req::CopyFrom(const send_block_req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bdfs.send_block_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool send_block_req::IsInitialized() const {
  return true;
}

void send_block_req::Swap(send_block_req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void send_block_req::InternalSwap(send_block_req* other) {
  using std::swap;
  swap(meta_, other->meta_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata send_block_req::GetMetadata() const {
  protobuf_datanode_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void send_block_resp::InitAsDefaultInstance() {
  ::bdfs::_send_block_resp_default_instance_._instance.get_mutable()->meta_ = const_cast< ::bdfs::message_meta*>(
      ::bdfs::message_meta::internal_default_instance());
  ::bdfs::_send_block_resp_default_instance_._instance.get_mutable()->resp_ = const_cast< ::bdfs::response*>(
      ::bdfs::response::internal_default_instance());
}
void send_block_resp::clear_meta() {
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
}
void send_block_resp::clear_resp() {
  if (GetArenaNoVirtual() == NULL && resp_ != NULL) {
    delete resp_;
  }
  resp_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int send_block_resp::kMetaFieldNumber;
const int send_block_resp::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

send_block_resp::send_block_resp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_datanode_5fserver_2eproto::InitDefaultssend_block_resp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bdfs.send_block_resp)
}
send_block_resp::send_block_resp(const send_block_resp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_meta()) {
    meta_ = new ::bdfs::message_meta(*from.meta_);
  } else {
    meta_ = NULL;
  }
  if (from.has_resp()) {
    resp_ = new ::bdfs::response(*from.resp_);
  } else {
    resp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:bdfs.send_block_resp)
}

void send_block_resp::SharedCtor() {
  ::memset(&meta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resp_) -
      reinterpret_cast<char*>(&meta_)) + sizeof(resp_));
  _cached_size_ = 0;
}

send_block_resp::~send_block_resp() {
  // @@protoc_insertion_point(destructor:bdfs.send_block_resp)
  SharedDtor();
}

void send_block_resp::SharedDtor() {
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete resp_;
}

void send_block_resp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* send_block_resp::descriptor() {
  ::protobuf_datanode_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_5fserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const send_block_resp& send_block_resp::default_instance() {
  ::protobuf_datanode_5fserver_2eproto::InitDefaultssend_block_resp();
  return *internal_default_instance();
}

send_block_resp* send_block_resp::New(::google::protobuf::Arena* arena) const {
  send_block_resp* n = new send_block_resp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void send_block_resp::Clear() {
// @@protoc_insertion_point(message_clear_start:bdfs.send_block_resp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
  if (GetArenaNoVirtual() == NULL && resp_ != NULL) {
    delete resp_;
  }
  resp_ = NULL;
  _internal_metadata_.Clear();
}

bool send_block_resp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bdfs.send_block_resp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bdfs.message_meta meta = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bdfs.response resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bdfs.send_block_resp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bdfs.send_block_resp)
  return false;
#undef DO_
}

void send_block_resp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bdfs.send_block_resp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bdfs.message_meta meta = 1;
  if (this->has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->meta_, output);
  }

  // .bdfs.response resp = 2;
  if (this->has_resp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->resp_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bdfs.send_block_resp)
}

::google::protobuf::uint8* send_block_resp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bdfs.send_block_resp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bdfs.message_meta meta = 1;
  if (this->has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->meta_, deterministic, target);
  }

  // .bdfs.response resp = 2;
  if (this->has_resp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->resp_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bdfs.send_block_resp)
  return target;
}

size_t send_block_resp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bdfs.send_block_resp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .bdfs.message_meta meta = 1;
  if (this->has_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->meta_);
  }

  // .bdfs.response resp = 2;
  if (this->has_resp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->resp_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void send_block_resp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bdfs.send_block_resp)
  GOOGLE_DCHECK_NE(&from, this);
  const send_block_resp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const send_block_resp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bdfs.send_block_resp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bdfs.send_block_resp)
    MergeFrom(*source);
  }
}

void send_block_resp::MergeFrom(const send_block_resp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bdfs.send_block_resp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_meta()) {
    mutable_meta()->::bdfs::message_meta::MergeFrom(from.meta());
  }
  if (from.has_resp()) {
    mutable_resp()->::bdfs::response::MergeFrom(from.resp());
  }
}

void send_block_resp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bdfs.send_block_resp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void send_block_resp::CopyFrom(const send_block_resp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bdfs.send_block_resp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool send_block_resp::IsInitialized() const {
  return true;
}

void send_block_resp::Swap(send_block_resp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void send_block_resp::InternalSwap(send_block_resp* other) {
  using std::swap;
  swap(meta_, other->meta_);
  swap(resp_, other->resp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata send_block_resp::GetMetadata() const {
  protobuf_datanode_5fserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_5fserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace bdfs

// @@protoc_insertion_point(global_scope)
