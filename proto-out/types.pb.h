// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: types.proto

#ifndef PROTOBUF_types_2eproto__INCLUDED
#define PROTOBUF_types_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_types_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsEmptyImpl();
void InitDefaultsEmpty();
void InitDefaultsmessage_metaImpl();
void InitDefaultsmessage_meta();
void InitDefaultsresponseImpl();
void InitDefaultsresponse();
inline void InitDefaults() {
  InitDefaultsEmpty();
  InitDefaultsmessage_meta();
  InitDefaultsresponse();
}
}  // namespace protobuf_types_2eproto
namespace bdfs {
class Empty;
class EmptyDefaultTypeInternal;
extern EmptyDefaultTypeInternal _Empty_default_instance_;
class message_meta;
class message_metaDefaultTypeInternal;
extern message_metaDefaultTypeInternal _message_meta_default_instance_;
class response;
class responseDefaultTypeInternal;
extern responseDefaultTypeInternal _response_default_instance_;
}  // namespace bdfs
namespace bdfs {

enum response_Resp {
  response_Resp_NA = 0,
  response_Resp_SUCCESS = 1,
  response_Resp_FAIL = 2,
  response_Resp_CATASTROPHIC = 3,
  response_Resp_response_Resp_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  response_Resp_response_Resp_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool response_Resp_IsValid(int value);
const response_Resp response_Resp_Resp_MIN = response_Resp_NA;
const response_Resp response_Resp_Resp_MAX = response_Resp_CATASTROPHIC;
const int response_Resp_Resp_ARRAYSIZE = response_Resp_Resp_MAX + 1;

const ::google::protobuf::EnumDescriptor* response_Resp_descriptor();
inline const ::std::string& response_Resp_Name(response_Resp value) {
  return ::google::protobuf::internal::NameOfEnum(
    response_Resp_descriptor(), value);
}
inline bool response_Resp_Parse(
    const ::std::string& name, response_Resp* value) {
  return ::google::protobuf::internal::ParseNamedEnum<response_Resp>(
    response_Resp_descriptor(), name, value);
}
// ===================================================================

class Empty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bdfs.Empty) */ {
 public:
  Empty();
  virtual ~Empty();

  Empty(const Empty& from);

  inline Empty& operator=(const Empty& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Empty(Empty&& from) noexcept
    : Empty() {
    *this = ::std::move(from);
  }

  inline Empty& operator=(Empty&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Empty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Empty* internal_default_instance() {
    return reinterpret_cast<const Empty*>(
               &_Empty_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Empty* other);
  friend void swap(Empty& a, Empty& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Empty* New() const PROTOBUF_FINAL { return New(NULL); }

  Empty* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Empty& from);
  void MergeFrom(const Empty& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Empty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:bdfs.Empty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_types_2eproto::TableStruct;
  friend void ::protobuf_types_2eproto::InitDefaultsEmptyImpl();
};
// -------------------------------------------------------------------

class message_meta : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bdfs.message_meta) */ {
 public:
  message_meta();
  virtual ~message_meta();

  message_meta(const message_meta& from);

  inline message_meta& operator=(const message_meta& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  message_meta(message_meta&& from) noexcept
    : message_meta() {
    *this = ::std::move(from);
  }

  inline message_meta& operator=(message_meta&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const message_meta& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const message_meta* internal_default_instance() {
    return reinterpret_cast<const message_meta*>(
               &_message_meta_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(message_meta* other);
  friend void swap(message_meta& a, message_meta& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline message_meta* New() const PROTOBUF_FINAL { return New(NULL); }

  message_meta* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const message_meta& from);
  void MergeFrom(const message_meta& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(message_meta* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bdfs.message_meta)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 id_;
  mutable int _cached_size_;
  friend struct ::protobuf_types_2eproto::TableStruct;
  friend void ::protobuf_types_2eproto::InitDefaultsmessage_metaImpl();
};
// -------------------------------------------------------------------

class response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bdfs.response) */ {
 public:
  response();
  virtual ~response();

  response(const response& from);

  inline response& operator=(const response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  response(response&& from) noexcept
    : response() {
    *this = ::std::move(from);
  }

  inline response& operator=(response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const response* internal_default_instance() {
    return reinterpret_cast<const response*>(
               &_response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(response* other);
  friend void swap(response& a, response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline response* New() const PROTOBUF_FINAL { return New(NULL); }

  response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const response& from);
  void MergeFrom(const response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef response_Resp Resp;
  static const Resp NA =
    response_Resp_NA;
  static const Resp SUCCESS =
    response_Resp_SUCCESS;
  static const Resp FAIL =
    response_Resp_FAIL;
  static const Resp CATASTROPHIC =
    response_Resp_CATASTROPHIC;
  static inline bool Resp_IsValid(int value) {
    return response_Resp_IsValid(value);
  }
  static const Resp Resp_MIN =
    response_Resp_Resp_MIN;
  static const Resp Resp_MAX =
    response_Resp_Resp_MAX;
  static const int Resp_ARRAYSIZE =
    response_Resp_Resp_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Resp_descriptor() {
    return response_Resp_descriptor();
  }
  static inline const ::std::string& Resp_Name(Resp value) {
    return response_Resp_Name(value);
  }
  static inline bool Resp_Parse(const ::std::string& name,
      Resp* value) {
    return response_Resp_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string message = 2;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // .bdfs.response.Resp response_code = 1;
  void clear_response_code();
  static const int kResponseCodeFieldNumber = 1;
  ::bdfs::response_Resp response_code() const;
  void set_response_code(::bdfs::response_Resp value);

  // @@protoc_insertion_point(class_scope:bdfs.response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  int response_code_;
  mutable int _cached_size_;
  friend struct ::protobuf_types_2eproto::TableStruct;
  friend void ::protobuf_types_2eproto::InitDefaultsresponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Empty

// -------------------------------------------------------------------

// message_meta

// uint64 id = 1;
inline void message_meta::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 message_meta::id() const {
  // @@protoc_insertion_point(field_get:bdfs.message_meta.id)
  return id_;
}
inline void message_meta::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:bdfs.message_meta.id)
}

// -------------------------------------------------------------------

// response

// .bdfs.response.Resp response_code = 1;
inline void response::clear_response_code() {
  response_code_ = 0;
}
inline ::bdfs::response_Resp response::response_code() const {
  // @@protoc_insertion_point(field_get:bdfs.response.response_code)
  return static_cast< ::bdfs::response_Resp >(response_code_);
}
inline void response::set_response_code(::bdfs::response_Resp value) {
  
  response_code_ = value;
  // @@protoc_insertion_point(field_set:bdfs.response.response_code)
}

// string message = 2;
inline void response::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& response::message() const {
  // @@protoc_insertion_point(field_get:bdfs.response.message)
  return message_.GetNoArena();
}
inline void response::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bdfs.response.message)
}
#if LANG_CXX11
inline void response::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bdfs.response.message)
}
#endif
inline void response::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bdfs.response.message)
}
inline void response::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bdfs.response.message)
}
inline ::std::string* response::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:bdfs.response.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* response::release_message() {
  // @@protoc_insertion_point(field_release:bdfs.response.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void response::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:bdfs.response.message)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace bdfs

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::bdfs::response_Resp> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::bdfs::response_Resp>() {
  return ::bdfs::response_Resp_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_types_2eproto__INCLUDED
