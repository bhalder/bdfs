// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datanode.proto

#include "datanode.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace bdfs {
class EmptyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Empty>
      _instance;
} _Empty_default_instance_;
class node_metaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<node_meta>
      _instance;
} _node_meta_default_instance_;
class msg_metaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<msg_meta>
      _instance;
} _msg_meta_default_instance_;
class datanodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<datanode>
      _instance;
} _datanode_default_instance_;
class datablock_metaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<datablock_meta>
      _instance;
} _datablock_meta_default_instance_;
class block_summaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<block_summary>
      _instance;
} _block_summary_default_instance_;
class fsserver_metaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<fsserver_meta>
      _instance;
} _fsserver_meta_default_instance_;
class connect_reqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<connect_req>
      _instance;
} _connect_req_default_instance_;
class connect_respDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<connect_resp>
      _instance;
} _connect_resp_default_instance_;
class keepalive_reqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<keepalive_req>
      _instance;
} _keepalive_req_default_instance_;
class keepalive_respDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<keepalive_resp>
      _instance;
} _keepalive_resp_default_instance_;
class disconnect_reqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<disconnect_req>
      _instance;
} _disconnect_req_default_instance_;
class disconnect_respDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<disconnect_resp>
      _instance;
} _disconnect_resp_default_instance_;
}  // namespace bdfs
namespace protobuf_datanode_2eproto {
void InitDefaultsEmptyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::bdfs::_Empty_default_instance_;
    new (ptr) ::bdfs::Empty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bdfs::Empty::InitAsDefaultInstance();
}

void InitDefaultsEmpty() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEmptyImpl);
}

void InitDefaultsnode_metaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::bdfs::_node_meta_default_instance_;
    new (ptr) ::bdfs::node_meta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bdfs::node_meta::InitAsDefaultInstance();
}

void InitDefaultsnode_meta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsnode_metaImpl);
}

void InitDefaultsmsg_metaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_datanode_2eproto::InitDefaultsnode_meta();
  {
    void* ptr = &::bdfs::_msg_meta_default_instance_;
    new (ptr) ::bdfs::msg_meta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bdfs::msg_meta::InitAsDefaultInstance();
}

void InitDefaultsmsg_meta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsmsg_metaImpl);
}

void InitDefaultsdatanodeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_datanode_2eproto::InitDefaultsnode_meta();
  {
    void* ptr = &::bdfs::_datanode_default_instance_;
    new (ptr) ::bdfs::datanode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bdfs::datanode::InitAsDefaultInstance();
}

void InitDefaultsdatanode() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsdatanodeImpl);
}

void InitDefaultsdatablock_metaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_datanode_2eproto::InitDefaultsdatanode();
  {
    void* ptr = &::bdfs::_datablock_meta_default_instance_;
    new (ptr) ::bdfs::datablock_meta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bdfs::datablock_meta::InitAsDefaultInstance();
}

void InitDefaultsdatablock_meta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsdatablock_metaImpl);
}

void InitDefaultsblock_summaryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_datanode_2eproto::InitDefaultsnode_meta();
  protobuf_datanode_2eproto::InitDefaultsdatablock_meta();
  {
    void* ptr = &::bdfs::_block_summary_default_instance_;
    new (ptr) ::bdfs::block_summary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bdfs::block_summary::InitAsDefaultInstance();
}

void InitDefaultsblock_summary() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsblock_summaryImpl);
}

void InitDefaultsfsserver_metaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_datanode_2eproto::InitDefaultsnode_meta();
  {
    void* ptr = &::bdfs::_fsserver_meta_default_instance_;
    new (ptr) ::bdfs::fsserver_meta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bdfs::fsserver_meta::InitAsDefaultInstance();
}

void InitDefaultsfsserver_meta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsfsserver_metaImpl);
}

void InitDefaultsconnect_reqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_datanode_2eproto::InitDefaultsdatanode();
  {
    void* ptr = &::bdfs::_connect_req_default_instance_;
    new (ptr) ::bdfs::connect_req();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bdfs::connect_req::InitAsDefaultInstance();
}

void InitDefaultsconnect_req() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsconnect_reqImpl);
}

void InitDefaultsconnect_respImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_datanode_2eproto::InitDefaultsfsserver_meta();
  {
    void* ptr = &::bdfs::_connect_resp_default_instance_;
    new (ptr) ::bdfs::connect_resp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bdfs::connect_resp::InitAsDefaultInstance();
}

void InitDefaultsconnect_resp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsconnect_respImpl);
}

void InitDefaultskeepalive_reqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_datanode_2eproto::InitDefaultsnode_meta();
  {
    void* ptr = &::bdfs::_keepalive_req_default_instance_;
    new (ptr) ::bdfs::keepalive_req();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bdfs::keepalive_req::InitAsDefaultInstance();
}

void InitDefaultskeepalive_req() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultskeepalive_reqImpl);
}

void InitDefaultskeepalive_respImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::bdfs::_keepalive_resp_default_instance_;
    new (ptr) ::bdfs::keepalive_resp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bdfs::keepalive_resp::InitAsDefaultInstance();
}

void InitDefaultskeepalive_resp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultskeepalive_respImpl);
}

void InitDefaultsdisconnect_reqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::bdfs::_disconnect_req_default_instance_;
    new (ptr) ::bdfs::disconnect_req();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bdfs::disconnect_req::InitAsDefaultInstance();
}

void InitDefaultsdisconnect_req() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsdisconnect_reqImpl);
}

void InitDefaultsdisconnect_respImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::bdfs::_disconnect_resp_default_instance_;
    new (ptr) ::bdfs::disconnect_resp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bdfs::disconnect_resp::InitAsDefaultInstance();
}

void InitDefaultsdisconnect_resp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsdisconnect_respImpl);
}

::google::protobuf::Metadata file_level_metadata[13];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::node_meta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::node_meta, _name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::node_meta, _ip_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::msg_meta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::msg_meta, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::msg_meta, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::msg_meta, from_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::datanode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::datanode, _meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::datanode, sizegb_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::datablock_meta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::datablock_meta, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::datablock_meta, hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::datablock_meta, replication_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::datablock_meta, replica_nodes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::block_summary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::block_summary, data_meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::block_summary, blocks_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::fsserver_meta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::fsserver_meta, _meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::fsserver_meta, keepalive_timeout_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::connect_req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::connect_req, _datanode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::connect_resp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::connect_resp, server_meta_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::keepalive_req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::keepalive_req, node_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::keepalive_req, keepalive_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::keepalive_resp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::keepalive_resp, nodename_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::disconnect_req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::disconnect_req, ipaddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::disconnect_req, nodename_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::disconnect_resp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::disconnect_resp, ipaddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bdfs::disconnect_resp, nodename_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::bdfs::Empty)},
  { 5, -1, sizeof(::bdfs::node_meta)},
  { 12, -1, sizeof(::bdfs::msg_meta)},
  { 20, -1, sizeof(::bdfs::datanode)},
  { 27, -1, sizeof(::bdfs::datablock_meta)},
  { 36, -1, sizeof(::bdfs::block_summary)},
  { 43, -1, sizeof(::bdfs::fsserver_meta)},
  { 50, -1, sizeof(::bdfs::connect_req)},
  { 56, -1, sizeof(::bdfs::connect_resp)},
  { 62, -1, sizeof(::bdfs::keepalive_req)},
  { 69, -1, sizeof(::bdfs::keepalive_resp)},
  { 75, -1, sizeof(::bdfs::disconnect_req)},
  { 82, -1, sizeof(::bdfs::disconnect_resp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::bdfs::_Empty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bdfs::_node_meta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bdfs::_msg_meta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bdfs::_datanode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bdfs::_datablock_meta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bdfs::_block_summary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bdfs::_fsserver_meta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bdfs::_connect_req_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bdfs::_connect_resp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bdfs::_keepalive_req_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bdfs::_keepalive_resp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bdfs::_disconnect_req_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bdfs::_disconnect_resp_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "datanode.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 13);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016datanode.proto\022\004bdfs\"\007\n\005Empty\"\'\n\tnode_"
      "meta\022\r\n\005_name\030\001 \001(\t\022\013\n\003_ip\030\002 \001(\t\"C\n\010msg_"
      "meta\022\n\n\002id\030\001 \001(\003\022\014\n\004type\030\002 \001(\005\022\035\n\004from\030\003"
      " \001(\0132\017.bdfs.node_meta\":\n\010datanode\022\036\n\005_me"
      "ta\030\001 \001(\0132\017.bdfs.node_meta\022\016\n\006sizeGB\030\003 \001("
      "\003\"n\n\016datablock_meta\022\014\n\004name\030\001 \001(\t\022\014\n\004has"
      "h\030\002 \001(\003\022\031\n\021replication_count\030\003 \001(\005\022%\n\rre"
      "plica_nodes\030\004 \003(\0132\016.bdfs.datanode\"Y\n\rblo"
      "ck_summary\022\"\n\tdata_meta\030\001 \001(\0132\017.bdfs.nod"
      "e_meta\022$\n\006blocks\030\002 \003(\0132\024.bdfs.datablock_"
      "meta\"J\n\rfsserver_meta\022\036\n\005_meta\030\001 \001(\0132\017.b"
      "dfs.node_meta\022\031\n\021keepalive_timeout\030\002 \001(\005"
      "\"0\n\013connect_req\022!\n\t_datanode\030\001 \001(\0132\016.bdf"
      "s.datanode\"8\n\014connect_resp\022(\n\013server_met"
      "a\030\001 \001(\0132\023.bdfs.fsserver_meta\"D\n\rkeepaliv"
      "e_req\022\035\n\004node\030\001 \001(\0132\017.bdfs.node_meta\022\024\n\014"
      "keepalive_id\030\002 \001(\005\"\"\n\016keepalive_resp\022\020\n\010"
      "nodename\030\001 \001(\t\"5\n\016disconnect_req\022\021\n\tipad"
      "dress\030\001 \001(\t\022\020\n\010nodename\030\002 \001(\t\"6\n\017disconn"
      "ect_resp\022\021\n\tipaddress\030\001 \001(\t\022\020\n\010nodename\030"
      "\002 \001(\t2\202\002\n\021datanode_protocol\0226\n\013SendConne"
      "ct\022\021.bdfs.connect_req\032\022.bdfs.connect_res"
      "p\"\000\022<\n\rSendKeepalive\022\023.bdfs.keepalive_re"
      "q\032\024.bdfs.keepalive_resp\"\000\0226\n\020SendBlockSu"
      "mmary\022\023.bdfs.block_summary\032\013.bdfs.Empty\""
      "\000\022\?\n\016SendDisconnect\022\024.bdfs.disconnect_re"
      "q\032\025.bdfs.disconnect_resp\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1074);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "datanode.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_datanode_2eproto
namespace bdfs {

// ===================================================================

void Empty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Empty::Empty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_datanode_2eproto::InitDefaultsEmpty();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bdfs.Empty)
}
Empty::Empty(const Empty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bdfs.Empty)
}

void Empty::SharedCtor() {
  _cached_size_ = 0;
}

Empty::~Empty() {
  // @@protoc_insertion_point(destructor:bdfs.Empty)
  SharedDtor();
}

void Empty::SharedDtor() {
}

void Empty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Empty::descriptor() {
  ::protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Empty& Empty::default_instance() {
  ::protobuf_datanode_2eproto::InitDefaultsEmpty();
  return *internal_default_instance();
}

Empty* Empty::New(::google::protobuf::Arena* arena) const {
  Empty* n = new Empty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:bdfs.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Empty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bdfs.Empty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:bdfs.Empty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bdfs.Empty)
  return false;
#undef DO_
}

void Empty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bdfs.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bdfs.Empty)
}

::google::protobuf::uint8* Empty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bdfs.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bdfs.Empty)
  return target;
}

size_t Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bdfs.Empty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Empty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bdfs.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const Empty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Empty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bdfs.Empty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bdfs.Empty)
    MergeFrom(*source);
  }
}

void Empty::MergeFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bdfs.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Empty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bdfs.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Empty::CopyFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bdfs.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Empty::IsInitialized() const {
  return true;
}

void Empty::Swap(Empty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Empty::InternalSwap(Empty* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Empty::GetMetadata() const {
  protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void node_meta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int node_meta::kNameFieldNumber;
const int node_meta::kIpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

node_meta::node_meta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_datanode_2eproto::InitDefaultsnode_meta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bdfs.node_meta)
}
node_meta::node_meta(const node_meta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from._name().size() > 0) {
    _name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._name_);
  }
  _ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from._ip().size() > 0) {
    _ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._ip_);
  }
  // @@protoc_insertion_point(copy_constructor:bdfs.node_meta)
}

void node_meta::SharedCtor() {
  _name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

node_meta::~node_meta() {
  // @@protoc_insertion_point(destructor:bdfs.node_meta)
  SharedDtor();
}

void node_meta::SharedDtor() {
  _name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void node_meta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* node_meta::descriptor() {
  ::protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const node_meta& node_meta::default_instance() {
  ::protobuf_datanode_2eproto::InitDefaultsnode_meta();
  return *internal_default_instance();
}

node_meta* node_meta::New(::google::protobuf::Arena* arena) const {
  node_meta* n = new node_meta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void node_meta::Clear() {
// @@protoc_insertion_point(message_clear_start:bdfs.node_meta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool node_meta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bdfs.node_meta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string _name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->_name().data(), static_cast<int>(this->_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bdfs.node_meta._name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string _ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->_ip().data(), static_cast<int>(this->_ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bdfs.node_meta._ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bdfs.node_meta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bdfs.node_meta)
  return false;
#undef DO_
}

void node_meta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bdfs.node_meta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string _name = 1;
  if (this->_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->_name().data(), static_cast<int>(this->_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bdfs.node_meta._name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->_name(), output);
  }

  // string _ip = 2;
  if (this->_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->_ip().data(), static_cast<int>(this->_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bdfs.node_meta._ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->_ip(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bdfs.node_meta)
}

::google::protobuf::uint8* node_meta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bdfs.node_meta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string _name = 1;
  if (this->_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->_name().data(), static_cast<int>(this->_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bdfs.node_meta._name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->_name(), target);
  }

  // string _ip = 2;
  if (this->_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->_ip().data(), static_cast<int>(this->_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bdfs.node_meta._ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->_ip(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bdfs.node_meta)
  return target;
}

size_t node_meta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bdfs.node_meta)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string _name = 1;
  if (this->_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->_name());
  }

  // string _ip = 2;
  if (this->_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->_ip());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void node_meta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bdfs.node_meta)
  GOOGLE_DCHECK_NE(&from, this);
  const node_meta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const node_meta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bdfs.node_meta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bdfs.node_meta)
    MergeFrom(*source);
  }
}

void node_meta::MergeFrom(const node_meta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bdfs.node_meta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._name().size() > 0) {

    _name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._name_);
  }
  if (from._ip().size() > 0) {

    _ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._ip_);
  }
}

void node_meta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bdfs.node_meta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void node_meta::CopyFrom(const node_meta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bdfs.node_meta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool node_meta::IsInitialized() const {
  return true;
}

void node_meta::Swap(node_meta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void node_meta::InternalSwap(node_meta* other) {
  using std::swap;
  _name_.Swap(&other->_name_);
  _ip_.Swap(&other->_ip_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata node_meta::GetMetadata() const {
  protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void msg_meta::InitAsDefaultInstance() {
  ::bdfs::_msg_meta_default_instance_._instance.get_mutable()->from_ = const_cast< ::bdfs::node_meta*>(
      ::bdfs::node_meta::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int msg_meta::kIdFieldNumber;
const int msg_meta::kTypeFieldNumber;
const int msg_meta::kFromFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

msg_meta::msg_meta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_datanode_2eproto::InitDefaultsmsg_meta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bdfs.msg_meta)
}
msg_meta::msg_meta(const msg_meta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_from()) {
    from_ = new ::bdfs::node_meta(*from.from_);
  } else {
    from_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:bdfs.msg_meta)
}

void msg_meta::SharedCtor() {
  ::memset(&from_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&from_)) + sizeof(type_));
  _cached_size_ = 0;
}

msg_meta::~msg_meta() {
  // @@protoc_insertion_point(destructor:bdfs.msg_meta)
  SharedDtor();
}

void msg_meta::SharedDtor() {
  if (this != internal_default_instance()) delete from_;
}

void msg_meta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* msg_meta::descriptor() {
  ::protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const msg_meta& msg_meta::default_instance() {
  ::protobuf_datanode_2eproto::InitDefaultsmsg_meta();
  return *internal_default_instance();
}

msg_meta* msg_meta::New(::google::protobuf::Arena* arena) const {
  msg_meta* n = new msg_meta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void msg_meta::Clear() {
// @@protoc_insertion_point(message_clear_start:bdfs.msg_meta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && from_ != NULL) {
    delete from_;
  }
  from_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool msg_meta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bdfs.msg_meta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bdfs.node_meta from = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_from()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bdfs.msg_meta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bdfs.msg_meta)
  return false;
#undef DO_
}

void msg_meta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bdfs.msg_meta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // int32 type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // .bdfs.node_meta from = 3;
  if (this->has_from()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->from_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bdfs.msg_meta)
}

::google::protobuf::uint8* msg_meta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bdfs.msg_meta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // int32 type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // .bdfs.node_meta from = 3;
  if (this->has_from()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->from_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bdfs.msg_meta)
  return target;
}

size_t msg_meta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bdfs.msg_meta)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .bdfs.node_meta from = 3;
  if (this->has_from()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->from_);
  }

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // int32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void msg_meta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bdfs.msg_meta)
  GOOGLE_DCHECK_NE(&from, this);
  const msg_meta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const msg_meta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bdfs.msg_meta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bdfs.msg_meta)
    MergeFrom(*source);
  }
}

void msg_meta::MergeFrom(const msg_meta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bdfs.msg_meta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_from()) {
    mutable_from()->::bdfs::node_meta::MergeFrom(from.from());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void msg_meta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bdfs.msg_meta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void msg_meta::CopyFrom(const msg_meta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bdfs.msg_meta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool msg_meta::IsInitialized() const {
  return true;
}

void msg_meta::Swap(msg_meta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void msg_meta::InternalSwap(msg_meta* other) {
  using std::swap;
  swap(from_, other->from_);
  swap(id_, other->id_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata msg_meta::GetMetadata() const {
  protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void datanode::InitAsDefaultInstance() {
  ::bdfs::_datanode_default_instance_._instance.get_mutable()->_meta_ = const_cast< ::bdfs::node_meta*>(
      ::bdfs::node_meta::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int datanode::kMetaFieldNumber;
const int datanode::kSizeGBFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

datanode::datanode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_datanode_2eproto::InitDefaultsdatanode();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bdfs.datanode)
}
datanode::datanode(const datanode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has__meta()) {
    _meta_ = new ::bdfs::node_meta(*from._meta_);
  } else {
    _meta_ = NULL;
  }
  sizegb_ = from.sizegb_;
  // @@protoc_insertion_point(copy_constructor:bdfs.datanode)
}

void datanode::SharedCtor() {
  ::memset(&_meta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sizegb_) -
      reinterpret_cast<char*>(&_meta_)) + sizeof(sizegb_));
  _cached_size_ = 0;
}

datanode::~datanode() {
  // @@protoc_insertion_point(destructor:bdfs.datanode)
  SharedDtor();
}

void datanode::SharedDtor() {
  if (this != internal_default_instance()) delete _meta_;
}

void datanode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* datanode::descriptor() {
  ::protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const datanode& datanode::default_instance() {
  ::protobuf_datanode_2eproto::InitDefaultsdatanode();
  return *internal_default_instance();
}

datanode* datanode::New(::google::protobuf::Arena* arena) const {
  datanode* n = new datanode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void datanode::Clear() {
// @@protoc_insertion_point(message_clear_start:bdfs.datanode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && _meta_ != NULL) {
    delete _meta_;
  }
  _meta_ = NULL;
  sizegb_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool datanode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bdfs.datanode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bdfs.node_meta _meta = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable__meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 sizeGB = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &sizegb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bdfs.datanode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bdfs.datanode)
  return false;
#undef DO_
}

void datanode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bdfs.datanode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bdfs.node_meta _meta = 1;
  if (this->has__meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->_meta_, output);
  }

  // int64 sizeGB = 3;
  if (this->sizegb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->sizegb(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bdfs.datanode)
}

::google::protobuf::uint8* datanode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bdfs.datanode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bdfs.node_meta _meta = 1;
  if (this->has__meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->_meta_, deterministic, target);
  }

  // int64 sizeGB = 3;
  if (this->sizegb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->sizegb(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bdfs.datanode)
  return target;
}

size_t datanode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bdfs.datanode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .bdfs.node_meta _meta = 1;
  if (this->has__meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->_meta_);
  }

  // int64 sizeGB = 3;
  if (this->sizegb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->sizegb());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void datanode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bdfs.datanode)
  GOOGLE_DCHECK_NE(&from, this);
  const datanode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const datanode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bdfs.datanode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bdfs.datanode)
    MergeFrom(*source);
  }
}

void datanode::MergeFrom(const datanode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bdfs.datanode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has__meta()) {
    mutable__meta()->::bdfs::node_meta::MergeFrom(from._meta());
  }
  if (from.sizegb() != 0) {
    set_sizegb(from.sizegb());
  }
}

void datanode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bdfs.datanode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void datanode::CopyFrom(const datanode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bdfs.datanode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool datanode::IsInitialized() const {
  return true;
}

void datanode::Swap(datanode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void datanode::InternalSwap(datanode* other) {
  using std::swap;
  swap(_meta_, other->_meta_);
  swap(sizegb_, other->sizegb_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata datanode::GetMetadata() const {
  protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void datablock_meta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int datablock_meta::kNameFieldNumber;
const int datablock_meta::kHashFieldNumber;
const int datablock_meta::kReplicationCountFieldNumber;
const int datablock_meta::kReplicaNodesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

datablock_meta::datablock_meta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_datanode_2eproto::InitDefaultsdatablock_meta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bdfs.datablock_meta)
}
datablock_meta::datablock_meta(const datablock_meta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      replica_nodes_(from.replica_nodes_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&hash_, &from.hash_,
    static_cast<size_t>(reinterpret_cast<char*>(&replication_count_) -
    reinterpret_cast<char*>(&hash_)) + sizeof(replication_count_));
  // @@protoc_insertion_point(copy_constructor:bdfs.datablock_meta)
}

void datablock_meta::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hash_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&replication_count_) -
      reinterpret_cast<char*>(&hash_)) + sizeof(replication_count_));
  _cached_size_ = 0;
}

datablock_meta::~datablock_meta() {
  // @@protoc_insertion_point(destructor:bdfs.datablock_meta)
  SharedDtor();
}

void datablock_meta::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void datablock_meta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* datablock_meta::descriptor() {
  ::protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const datablock_meta& datablock_meta::default_instance() {
  ::protobuf_datanode_2eproto::InitDefaultsdatablock_meta();
  return *internal_default_instance();
}

datablock_meta* datablock_meta::New(::google::protobuf::Arena* arena) const {
  datablock_meta* n = new datablock_meta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void datablock_meta::Clear() {
// @@protoc_insertion_point(message_clear_start:bdfs.datablock_meta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  replica_nodes_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hash_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&replication_count_) -
      reinterpret_cast<char*>(&hash_)) + sizeof(replication_count_));
  _internal_metadata_.Clear();
}

bool datablock_meta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bdfs.datablock_meta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bdfs.datablock_meta.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 hash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 replication_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &replication_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bdfs.datanode replica_nodes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_replica_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bdfs.datablock_meta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bdfs.datablock_meta)
  return false;
#undef DO_
}

void datablock_meta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bdfs.datablock_meta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bdfs.datablock_meta.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // int64 hash = 2;
  if (this->hash() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->hash(), output);
  }

  // int32 replication_count = 3;
  if (this->replication_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->replication_count(), output);
  }

  // repeated .bdfs.datanode replica_nodes = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->replica_nodes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->replica_nodes(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bdfs.datablock_meta)
}

::google::protobuf::uint8* datablock_meta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bdfs.datablock_meta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bdfs.datablock_meta.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // int64 hash = 2;
  if (this->hash() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->hash(), target);
  }

  // int32 replication_count = 3;
  if (this->replication_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->replication_count(), target);
  }

  // repeated .bdfs.datanode replica_nodes = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->replica_nodes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->replica_nodes(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bdfs.datablock_meta)
  return target;
}

size_t datablock_meta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bdfs.datablock_meta)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .bdfs.datanode replica_nodes = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->replica_nodes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->replica_nodes(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int64 hash = 2;
  if (this->hash() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->hash());
  }

  // int32 replication_count = 3;
  if (this->replication_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->replication_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void datablock_meta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bdfs.datablock_meta)
  GOOGLE_DCHECK_NE(&from, this);
  const datablock_meta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const datablock_meta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bdfs.datablock_meta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bdfs.datablock_meta)
    MergeFrom(*source);
  }
}

void datablock_meta::MergeFrom(const datablock_meta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bdfs.datablock_meta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  replica_nodes_.MergeFrom(from.replica_nodes_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.hash() != 0) {
    set_hash(from.hash());
  }
  if (from.replication_count() != 0) {
    set_replication_count(from.replication_count());
  }
}

void datablock_meta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bdfs.datablock_meta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void datablock_meta::CopyFrom(const datablock_meta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bdfs.datablock_meta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool datablock_meta::IsInitialized() const {
  return true;
}

void datablock_meta::Swap(datablock_meta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void datablock_meta::InternalSwap(datablock_meta* other) {
  using std::swap;
  replica_nodes_.InternalSwap(&other->replica_nodes_);
  name_.Swap(&other->name_);
  swap(hash_, other->hash_);
  swap(replication_count_, other->replication_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata datablock_meta::GetMetadata() const {
  protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void block_summary::InitAsDefaultInstance() {
  ::bdfs::_block_summary_default_instance_._instance.get_mutable()->data_meta_ = const_cast< ::bdfs::node_meta*>(
      ::bdfs::node_meta::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int block_summary::kDataMetaFieldNumber;
const int block_summary::kBlocksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

block_summary::block_summary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_datanode_2eproto::InitDefaultsblock_summary();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bdfs.block_summary)
}
block_summary::block_summary(const block_summary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      blocks_(from.blocks_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data_meta()) {
    data_meta_ = new ::bdfs::node_meta(*from.data_meta_);
  } else {
    data_meta_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:bdfs.block_summary)
}

void block_summary::SharedCtor() {
  data_meta_ = NULL;
  _cached_size_ = 0;
}

block_summary::~block_summary() {
  // @@protoc_insertion_point(destructor:bdfs.block_summary)
  SharedDtor();
}

void block_summary::SharedDtor() {
  if (this != internal_default_instance()) delete data_meta_;
}

void block_summary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* block_summary::descriptor() {
  ::protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const block_summary& block_summary::default_instance() {
  ::protobuf_datanode_2eproto::InitDefaultsblock_summary();
  return *internal_default_instance();
}

block_summary* block_summary::New(::google::protobuf::Arena* arena) const {
  block_summary* n = new block_summary;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void block_summary::Clear() {
// @@protoc_insertion_point(message_clear_start:bdfs.block_summary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  blocks_.Clear();
  if (GetArenaNoVirtual() == NULL && data_meta_ != NULL) {
    delete data_meta_;
  }
  data_meta_ = NULL;
  _internal_metadata_.Clear();
}

bool block_summary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bdfs.block_summary)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bdfs.node_meta data_meta = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bdfs.datablock_meta blocks = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_blocks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bdfs.block_summary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bdfs.block_summary)
  return false;
#undef DO_
}

void block_summary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bdfs.block_summary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bdfs.node_meta data_meta = 1;
  if (this->has_data_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->data_meta_, output);
  }

  // repeated .bdfs.datablock_meta blocks = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->blocks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->blocks(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bdfs.block_summary)
}

::google::protobuf::uint8* block_summary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bdfs.block_summary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bdfs.node_meta data_meta = 1;
  if (this->has_data_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->data_meta_, deterministic, target);
  }

  // repeated .bdfs.datablock_meta blocks = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->blocks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->blocks(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bdfs.block_summary)
  return target;
}

size_t block_summary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bdfs.block_summary)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .bdfs.datablock_meta blocks = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->blocks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->blocks(static_cast<int>(i)));
    }
  }

  // .bdfs.node_meta data_meta = 1;
  if (this->has_data_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->data_meta_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void block_summary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bdfs.block_summary)
  GOOGLE_DCHECK_NE(&from, this);
  const block_summary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const block_summary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bdfs.block_summary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bdfs.block_summary)
    MergeFrom(*source);
  }
}

void block_summary::MergeFrom(const block_summary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bdfs.block_summary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  blocks_.MergeFrom(from.blocks_);
  if (from.has_data_meta()) {
    mutable_data_meta()->::bdfs::node_meta::MergeFrom(from.data_meta());
  }
}

void block_summary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bdfs.block_summary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void block_summary::CopyFrom(const block_summary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bdfs.block_summary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool block_summary::IsInitialized() const {
  return true;
}

void block_summary::Swap(block_summary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void block_summary::InternalSwap(block_summary* other) {
  using std::swap;
  blocks_.InternalSwap(&other->blocks_);
  swap(data_meta_, other->data_meta_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata block_summary::GetMetadata() const {
  protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void fsserver_meta::InitAsDefaultInstance() {
  ::bdfs::_fsserver_meta_default_instance_._instance.get_mutable()->_meta_ = const_cast< ::bdfs::node_meta*>(
      ::bdfs::node_meta::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int fsserver_meta::kMetaFieldNumber;
const int fsserver_meta::kKeepaliveTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

fsserver_meta::fsserver_meta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_datanode_2eproto::InitDefaultsfsserver_meta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bdfs.fsserver_meta)
}
fsserver_meta::fsserver_meta(const fsserver_meta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has__meta()) {
    _meta_ = new ::bdfs::node_meta(*from._meta_);
  } else {
    _meta_ = NULL;
  }
  keepalive_timeout_ = from.keepalive_timeout_;
  // @@protoc_insertion_point(copy_constructor:bdfs.fsserver_meta)
}

void fsserver_meta::SharedCtor() {
  ::memset(&_meta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&keepalive_timeout_) -
      reinterpret_cast<char*>(&_meta_)) + sizeof(keepalive_timeout_));
  _cached_size_ = 0;
}

fsserver_meta::~fsserver_meta() {
  // @@protoc_insertion_point(destructor:bdfs.fsserver_meta)
  SharedDtor();
}

void fsserver_meta::SharedDtor() {
  if (this != internal_default_instance()) delete _meta_;
}

void fsserver_meta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* fsserver_meta::descriptor() {
  ::protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const fsserver_meta& fsserver_meta::default_instance() {
  ::protobuf_datanode_2eproto::InitDefaultsfsserver_meta();
  return *internal_default_instance();
}

fsserver_meta* fsserver_meta::New(::google::protobuf::Arena* arena) const {
  fsserver_meta* n = new fsserver_meta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void fsserver_meta::Clear() {
// @@protoc_insertion_point(message_clear_start:bdfs.fsserver_meta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && _meta_ != NULL) {
    delete _meta_;
  }
  _meta_ = NULL;
  keepalive_timeout_ = 0;
  _internal_metadata_.Clear();
}

bool fsserver_meta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bdfs.fsserver_meta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bdfs.node_meta _meta = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable__meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 keepalive_timeout = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &keepalive_timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bdfs.fsserver_meta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bdfs.fsserver_meta)
  return false;
#undef DO_
}

void fsserver_meta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bdfs.fsserver_meta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bdfs.node_meta _meta = 1;
  if (this->has__meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->_meta_, output);
  }

  // int32 keepalive_timeout = 2;
  if (this->keepalive_timeout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->keepalive_timeout(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bdfs.fsserver_meta)
}

::google::protobuf::uint8* fsserver_meta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bdfs.fsserver_meta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bdfs.node_meta _meta = 1;
  if (this->has__meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->_meta_, deterministic, target);
  }

  // int32 keepalive_timeout = 2;
  if (this->keepalive_timeout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->keepalive_timeout(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bdfs.fsserver_meta)
  return target;
}

size_t fsserver_meta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bdfs.fsserver_meta)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .bdfs.node_meta _meta = 1;
  if (this->has__meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->_meta_);
  }

  // int32 keepalive_timeout = 2;
  if (this->keepalive_timeout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->keepalive_timeout());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void fsserver_meta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bdfs.fsserver_meta)
  GOOGLE_DCHECK_NE(&from, this);
  const fsserver_meta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const fsserver_meta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bdfs.fsserver_meta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bdfs.fsserver_meta)
    MergeFrom(*source);
  }
}

void fsserver_meta::MergeFrom(const fsserver_meta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bdfs.fsserver_meta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has__meta()) {
    mutable__meta()->::bdfs::node_meta::MergeFrom(from._meta());
  }
  if (from.keepalive_timeout() != 0) {
    set_keepalive_timeout(from.keepalive_timeout());
  }
}

void fsserver_meta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bdfs.fsserver_meta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void fsserver_meta::CopyFrom(const fsserver_meta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bdfs.fsserver_meta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool fsserver_meta::IsInitialized() const {
  return true;
}

void fsserver_meta::Swap(fsserver_meta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void fsserver_meta::InternalSwap(fsserver_meta* other) {
  using std::swap;
  swap(_meta_, other->_meta_);
  swap(keepalive_timeout_, other->keepalive_timeout_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata fsserver_meta::GetMetadata() const {
  protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void connect_req::InitAsDefaultInstance() {
  ::bdfs::_connect_req_default_instance_._instance.get_mutable()->_datanode_ = const_cast< ::bdfs::datanode*>(
      ::bdfs::datanode::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int connect_req::kDatanodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

connect_req::connect_req()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_datanode_2eproto::InitDefaultsconnect_req();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bdfs.connect_req)
}
connect_req::connect_req(const connect_req& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has__datanode()) {
    _datanode_ = new ::bdfs::datanode(*from._datanode_);
  } else {
    _datanode_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:bdfs.connect_req)
}

void connect_req::SharedCtor() {
  _datanode_ = NULL;
  _cached_size_ = 0;
}

connect_req::~connect_req() {
  // @@protoc_insertion_point(destructor:bdfs.connect_req)
  SharedDtor();
}

void connect_req::SharedDtor() {
  if (this != internal_default_instance()) delete _datanode_;
}

void connect_req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* connect_req::descriptor() {
  ::protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const connect_req& connect_req::default_instance() {
  ::protobuf_datanode_2eproto::InitDefaultsconnect_req();
  return *internal_default_instance();
}

connect_req* connect_req::New(::google::protobuf::Arena* arena) const {
  connect_req* n = new connect_req;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void connect_req::Clear() {
// @@protoc_insertion_point(message_clear_start:bdfs.connect_req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && _datanode_ != NULL) {
    delete _datanode_;
  }
  _datanode_ = NULL;
  _internal_metadata_.Clear();
}

bool connect_req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bdfs.connect_req)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bdfs.datanode _datanode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable__datanode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bdfs.connect_req)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bdfs.connect_req)
  return false;
#undef DO_
}

void connect_req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bdfs.connect_req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bdfs.datanode _datanode = 1;
  if (this->has__datanode()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->_datanode_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bdfs.connect_req)
}

::google::protobuf::uint8* connect_req::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bdfs.connect_req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bdfs.datanode _datanode = 1;
  if (this->has__datanode()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->_datanode_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bdfs.connect_req)
  return target;
}

size_t connect_req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bdfs.connect_req)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .bdfs.datanode _datanode = 1;
  if (this->has__datanode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->_datanode_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void connect_req::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bdfs.connect_req)
  GOOGLE_DCHECK_NE(&from, this);
  const connect_req* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const connect_req>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bdfs.connect_req)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bdfs.connect_req)
    MergeFrom(*source);
  }
}

void connect_req::MergeFrom(const connect_req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bdfs.connect_req)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has__datanode()) {
    mutable__datanode()->::bdfs::datanode::MergeFrom(from._datanode());
  }
}

void connect_req::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bdfs.connect_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void connect_req::CopyFrom(const connect_req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bdfs.connect_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool connect_req::IsInitialized() const {
  return true;
}

void connect_req::Swap(connect_req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void connect_req::InternalSwap(connect_req* other) {
  using std::swap;
  swap(_datanode_, other->_datanode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata connect_req::GetMetadata() const {
  protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void connect_resp::InitAsDefaultInstance() {
  ::bdfs::_connect_resp_default_instance_._instance.get_mutable()->server_meta_ = const_cast< ::bdfs::fsserver_meta*>(
      ::bdfs::fsserver_meta::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int connect_resp::kServerMetaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

connect_resp::connect_resp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_datanode_2eproto::InitDefaultsconnect_resp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bdfs.connect_resp)
}
connect_resp::connect_resp(const connect_resp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_server_meta()) {
    server_meta_ = new ::bdfs::fsserver_meta(*from.server_meta_);
  } else {
    server_meta_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:bdfs.connect_resp)
}

void connect_resp::SharedCtor() {
  server_meta_ = NULL;
  _cached_size_ = 0;
}

connect_resp::~connect_resp() {
  // @@protoc_insertion_point(destructor:bdfs.connect_resp)
  SharedDtor();
}

void connect_resp::SharedDtor() {
  if (this != internal_default_instance()) delete server_meta_;
}

void connect_resp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* connect_resp::descriptor() {
  ::protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const connect_resp& connect_resp::default_instance() {
  ::protobuf_datanode_2eproto::InitDefaultsconnect_resp();
  return *internal_default_instance();
}

connect_resp* connect_resp::New(::google::protobuf::Arena* arena) const {
  connect_resp* n = new connect_resp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void connect_resp::Clear() {
// @@protoc_insertion_point(message_clear_start:bdfs.connect_resp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && server_meta_ != NULL) {
    delete server_meta_;
  }
  server_meta_ = NULL;
  _internal_metadata_.Clear();
}

bool connect_resp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bdfs.connect_resp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bdfs.fsserver_meta server_meta = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_server_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bdfs.connect_resp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bdfs.connect_resp)
  return false;
#undef DO_
}

void connect_resp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bdfs.connect_resp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bdfs.fsserver_meta server_meta = 1;
  if (this->has_server_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->server_meta_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bdfs.connect_resp)
}

::google::protobuf::uint8* connect_resp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bdfs.connect_resp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bdfs.fsserver_meta server_meta = 1;
  if (this->has_server_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->server_meta_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bdfs.connect_resp)
  return target;
}

size_t connect_resp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bdfs.connect_resp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .bdfs.fsserver_meta server_meta = 1;
  if (this->has_server_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->server_meta_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void connect_resp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bdfs.connect_resp)
  GOOGLE_DCHECK_NE(&from, this);
  const connect_resp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const connect_resp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bdfs.connect_resp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bdfs.connect_resp)
    MergeFrom(*source);
  }
}

void connect_resp::MergeFrom(const connect_resp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bdfs.connect_resp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_server_meta()) {
    mutable_server_meta()->::bdfs::fsserver_meta::MergeFrom(from.server_meta());
  }
}

void connect_resp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bdfs.connect_resp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void connect_resp::CopyFrom(const connect_resp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bdfs.connect_resp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool connect_resp::IsInitialized() const {
  return true;
}

void connect_resp::Swap(connect_resp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void connect_resp::InternalSwap(connect_resp* other) {
  using std::swap;
  swap(server_meta_, other->server_meta_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata connect_resp::GetMetadata() const {
  protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void keepalive_req::InitAsDefaultInstance() {
  ::bdfs::_keepalive_req_default_instance_._instance.get_mutable()->node_ = const_cast< ::bdfs::node_meta*>(
      ::bdfs::node_meta::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int keepalive_req::kNodeFieldNumber;
const int keepalive_req::kKeepaliveIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

keepalive_req::keepalive_req()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_datanode_2eproto::InitDefaultskeepalive_req();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bdfs.keepalive_req)
}
keepalive_req::keepalive_req(const keepalive_req& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_node()) {
    node_ = new ::bdfs::node_meta(*from.node_);
  } else {
    node_ = NULL;
  }
  keepalive_id_ = from.keepalive_id_;
  // @@protoc_insertion_point(copy_constructor:bdfs.keepalive_req)
}

void keepalive_req::SharedCtor() {
  ::memset(&node_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&keepalive_id_) -
      reinterpret_cast<char*>(&node_)) + sizeof(keepalive_id_));
  _cached_size_ = 0;
}

keepalive_req::~keepalive_req() {
  // @@protoc_insertion_point(destructor:bdfs.keepalive_req)
  SharedDtor();
}

void keepalive_req::SharedDtor() {
  if (this != internal_default_instance()) delete node_;
}

void keepalive_req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* keepalive_req::descriptor() {
  ::protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const keepalive_req& keepalive_req::default_instance() {
  ::protobuf_datanode_2eproto::InitDefaultskeepalive_req();
  return *internal_default_instance();
}

keepalive_req* keepalive_req::New(::google::protobuf::Arena* arena) const {
  keepalive_req* n = new keepalive_req;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void keepalive_req::Clear() {
// @@protoc_insertion_point(message_clear_start:bdfs.keepalive_req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && node_ != NULL) {
    delete node_;
  }
  node_ = NULL;
  keepalive_id_ = 0;
  _internal_metadata_.Clear();
}

bool keepalive_req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bdfs.keepalive_req)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bdfs.node_meta node = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_node()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 keepalive_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &keepalive_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bdfs.keepalive_req)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bdfs.keepalive_req)
  return false;
#undef DO_
}

void keepalive_req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bdfs.keepalive_req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bdfs.node_meta node = 1;
  if (this->has_node()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->node_, output);
  }

  // int32 keepalive_id = 2;
  if (this->keepalive_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->keepalive_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bdfs.keepalive_req)
}

::google::protobuf::uint8* keepalive_req::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bdfs.keepalive_req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bdfs.node_meta node = 1;
  if (this->has_node()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->node_, deterministic, target);
  }

  // int32 keepalive_id = 2;
  if (this->keepalive_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->keepalive_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bdfs.keepalive_req)
  return target;
}

size_t keepalive_req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bdfs.keepalive_req)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .bdfs.node_meta node = 1;
  if (this->has_node()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->node_);
  }

  // int32 keepalive_id = 2;
  if (this->keepalive_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->keepalive_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void keepalive_req::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bdfs.keepalive_req)
  GOOGLE_DCHECK_NE(&from, this);
  const keepalive_req* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const keepalive_req>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bdfs.keepalive_req)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bdfs.keepalive_req)
    MergeFrom(*source);
  }
}

void keepalive_req::MergeFrom(const keepalive_req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bdfs.keepalive_req)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_node()) {
    mutable_node()->::bdfs::node_meta::MergeFrom(from.node());
  }
  if (from.keepalive_id() != 0) {
    set_keepalive_id(from.keepalive_id());
  }
}

void keepalive_req::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bdfs.keepalive_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void keepalive_req::CopyFrom(const keepalive_req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bdfs.keepalive_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool keepalive_req::IsInitialized() const {
  return true;
}

void keepalive_req::Swap(keepalive_req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void keepalive_req::InternalSwap(keepalive_req* other) {
  using std::swap;
  swap(node_, other->node_);
  swap(keepalive_id_, other->keepalive_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata keepalive_req::GetMetadata() const {
  protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void keepalive_resp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int keepalive_resp::kNodenameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

keepalive_resp::keepalive_resp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_datanode_2eproto::InitDefaultskeepalive_resp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bdfs.keepalive_resp)
}
keepalive_resp::keepalive_resp(const keepalive_resp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nodename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nodename().size() > 0) {
    nodename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nodename_);
  }
  // @@protoc_insertion_point(copy_constructor:bdfs.keepalive_resp)
}

void keepalive_resp::SharedCtor() {
  nodename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

keepalive_resp::~keepalive_resp() {
  // @@protoc_insertion_point(destructor:bdfs.keepalive_resp)
  SharedDtor();
}

void keepalive_resp::SharedDtor() {
  nodename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void keepalive_resp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* keepalive_resp::descriptor() {
  ::protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const keepalive_resp& keepalive_resp::default_instance() {
  ::protobuf_datanode_2eproto::InitDefaultskeepalive_resp();
  return *internal_default_instance();
}

keepalive_resp* keepalive_resp::New(::google::protobuf::Arena* arena) const {
  keepalive_resp* n = new keepalive_resp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void keepalive_resp::Clear() {
// @@protoc_insertion_point(message_clear_start:bdfs.keepalive_resp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool keepalive_resp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bdfs.keepalive_resp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string nodename = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nodename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nodename().data(), static_cast<int>(this->nodename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bdfs.keepalive_resp.nodename"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bdfs.keepalive_resp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bdfs.keepalive_resp)
  return false;
#undef DO_
}

void keepalive_resp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bdfs.keepalive_resp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nodename = 1;
  if (this->nodename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nodename().data(), static_cast<int>(this->nodename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bdfs.keepalive_resp.nodename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->nodename(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bdfs.keepalive_resp)
}

::google::protobuf::uint8* keepalive_resp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bdfs.keepalive_resp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nodename = 1;
  if (this->nodename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nodename().data(), static_cast<int>(this->nodename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bdfs.keepalive_resp.nodename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->nodename(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bdfs.keepalive_resp)
  return target;
}

size_t keepalive_resp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bdfs.keepalive_resp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string nodename = 1;
  if (this->nodename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nodename());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void keepalive_resp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bdfs.keepalive_resp)
  GOOGLE_DCHECK_NE(&from, this);
  const keepalive_resp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const keepalive_resp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bdfs.keepalive_resp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bdfs.keepalive_resp)
    MergeFrom(*source);
  }
}

void keepalive_resp::MergeFrom(const keepalive_resp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bdfs.keepalive_resp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nodename().size() > 0) {

    nodename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nodename_);
  }
}

void keepalive_resp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bdfs.keepalive_resp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void keepalive_resp::CopyFrom(const keepalive_resp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bdfs.keepalive_resp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool keepalive_resp::IsInitialized() const {
  return true;
}

void keepalive_resp::Swap(keepalive_resp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void keepalive_resp::InternalSwap(keepalive_resp* other) {
  using std::swap;
  nodename_.Swap(&other->nodename_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata keepalive_resp::GetMetadata() const {
  protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void disconnect_req::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int disconnect_req::kIpaddressFieldNumber;
const int disconnect_req::kNodenameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

disconnect_req::disconnect_req()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_datanode_2eproto::InitDefaultsdisconnect_req();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bdfs.disconnect_req)
}
disconnect_req::disconnect_req(const disconnect_req& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ipaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ipaddress().size() > 0) {
    ipaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ipaddress_);
  }
  nodename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nodename().size() > 0) {
    nodename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nodename_);
  }
  // @@protoc_insertion_point(copy_constructor:bdfs.disconnect_req)
}

void disconnect_req::SharedCtor() {
  ipaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nodename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

disconnect_req::~disconnect_req() {
  // @@protoc_insertion_point(destructor:bdfs.disconnect_req)
  SharedDtor();
}

void disconnect_req::SharedDtor() {
  ipaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nodename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void disconnect_req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* disconnect_req::descriptor() {
  ::protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const disconnect_req& disconnect_req::default_instance() {
  ::protobuf_datanode_2eproto::InitDefaultsdisconnect_req();
  return *internal_default_instance();
}

disconnect_req* disconnect_req::New(::google::protobuf::Arena* arena) const {
  disconnect_req* n = new disconnect_req;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void disconnect_req::Clear() {
// @@protoc_insertion_point(message_clear_start:bdfs.disconnect_req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ipaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nodename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool disconnect_req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bdfs.disconnect_req)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ipaddress = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ipaddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ipaddress().data(), static_cast<int>(this->ipaddress().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bdfs.disconnect_req.ipaddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nodename = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nodename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nodename().data(), static_cast<int>(this->nodename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bdfs.disconnect_req.nodename"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bdfs.disconnect_req)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bdfs.disconnect_req)
  return false;
#undef DO_
}

void disconnect_req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bdfs.disconnect_req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ipaddress = 1;
  if (this->ipaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ipaddress().data(), static_cast<int>(this->ipaddress().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bdfs.disconnect_req.ipaddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ipaddress(), output);
  }

  // string nodename = 2;
  if (this->nodename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nodename().data(), static_cast<int>(this->nodename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bdfs.disconnect_req.nodename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nodename(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bdfs.disconnect_req)
}

::google::protobuf::uint8* disconnect_req::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bdfs.disconnect_req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ipaddress = 1;
  if (this->ipaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ipaddress().data(), static_cast<int>(this->ipaddress().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bdfs.disconnect_req.ipaddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ipaddress(), target);
  }

  // string nodename = 2;
  if (this->nodename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nodename().data(), static_cast<int>(this->nodename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bdfs.disconnect_req.nodename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nodename(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bdfs.disconnect_req)
  return target;
}

size_t disconnect_req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bdfs.disconnect_req)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ipaddress = 1;
  if (this->ipaddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ipaddress());
  }

  // string nodename = 2;
  if (this->nodename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nodename());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void disconnect_req::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bdfs.disconnect_req)
  GOOGLE_DCHECK_NE(&from, this);
  const disconnect_req* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const disconnect_req>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bdfs.disconnect_req)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bdfs.disconnect_req)
    MergeFrom(*source);
  }
}

void disconnect_req::MergeFrom(const disconnect_req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bdfs.disconnect_req)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ipaddress().size() > 0) {

    ipaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ipaddress_);
  }
  if (from.nodename().size() > 0) {

    nodename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nodename_);
  }
}

void disconnect_req::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bdfs.disconnect_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void disconnect_req::CopyFrom(const disconnect_req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bdfs.disconnect_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool disconnect_req::IsInitialized() const {
  return true;
}

void disconnect_req::Swap(disconnect_req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void disconnect_req::InternalSwap(disconnect_req* other) {
  using std::swap;
  ipaddress_.Swap(&other->ipaddress_);
  nodename_.Swap(&other->nodename_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata disconnect_req::GetMetadata() const {
  protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void disconnect_resp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int disconnect_resp::kIpaddressFieldNumber;
const int disconnect_resp::kNodenameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

disconnect_resp::disconnect_resp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_datanode_2eproto::InitDefaultsdisconnect_resp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bdfs.disconnect_resp)
}
disconnect_resp::disconnect_resp(const disconnect_resp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ipaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ipaddress().size() > 0) {
    ipaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ipaddress_);
  }
  nodename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nodename().size() > 0) {
    nodename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nodename_);
  }
  // @@protoc_insertion_point(copy_constructor:bdfs.disconnect_resp)
}

void disconnect_resp::SharedCtor() {
  ipaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nodename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

disconnect_resp::~disconnect_resp() {
  // @@protoc_insertion_point(destructor:bdfs.disconnect_resp)
  SharedDtor();
}

void disconnect_resp::SharedDtor() {
  ipaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nodename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void disconnect_resp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* disconnect_resp::descriptor() {
  ::protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const disconnect_resp& disconnect_resp::default_instance() {
  ::protobuf_datanode_2eproto::InitDefaultsdisconnect_resp();
  return *internal_default_instance();
}

disconnect_resp* disconnect_resp::New(::google::protobuf::Arena* arena) const {
  disconnect_resp* n = new disconnect_resp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void disconnect_resp::Clear() {
// @@protoc_insertion_point(message_clear_start:bdfs.disconnect_resp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ipaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nodename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool disconnect_resp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bdfs.disconnect_resp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ipaddress = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ipaddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ipaddress().data(), static_cast<int>(this->ipaddress().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bdfs.disconnect_resp.ipaddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nodename = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nodename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nodename().data(), static_cast<int>(this->nodename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bdfs.disconnect_resp.nodename"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bdfs.disconnect_resp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bdfs.disconnect_resp)
  return false;
#undef DO_
}

void disconnect_resp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bdfs.disconnect_resp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ipaddress = 1;
  if (this->ipaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ipaddress().data(), static_cast<int>(this->ipaddress().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bdfs.disconnect_resp.ipaddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ipaddress(), output);
  }

  // string nodename = 2;
  if (this->nodename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nodename().data(), static_cast<int>(this->nodename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bdfs.disconnect_resp.nodename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nodename(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bdfs.disconnect_resp)
}

::google::protobuf::uint8* disconnect_resp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bdfs.disconnect_resp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ipaddress = 1;
  if (this->ipaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ipaddress().data(), static_cast<int>(this->ipaddress().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bdfs.disconnect_resp.ipaddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ipaddress(), target);
  }

  // string nodename = 2;
  if (this->nodename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nodename().data(), static_cast<int>(this->nodename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bdfs.disconnect_resp.nodename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nodename(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bdfs.disconnect_resp)
  return target;
}

size_t disconnect_resp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bdfs.disconnect_resp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ipaddress = 1;
  if (this->ipaddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ipaddress());
  }

  // string nodename = 2;
  if (this->nodename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nodename());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void disconnect_resp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bdfs.disconnect_resp)
  GOOGLE_DCHECK_NE(&from, this);
  const disconnect_resp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const disconnect_resp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bdfs.disconnect_resp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bdfs.disconnect_resp)
    MergeFrom(*source);
  }
}

void disconnect_resp::MergeFrom(const disconnect_resp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bdfs.disconnect_resp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ipaddress().size() > 0) {

    ipaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ipaddress_);
  }
  if (from.nodename().size() > 0) {

    nodename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nodename_);
  }
}

void disconnect_resp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bdfs.disconnect_resp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void disconnect_resp::CopyFrom(const disconnect_resp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bdfs.disconnect_resp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool disconnect_resp::IsInitialized() const {
  return true;
}

void disconnect_resp::Swap(disconnect_resp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void disconnect_resp::InternalSwap(disconnect_resp* other) {
  using std::swap;
  ipaddress_.Swap(&other->ipaddress_);
  nodename_.Swap(&other->nodename_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata disconnect_resp::GetMetadata() const {
  protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace bdfs

// @@protoc_insertion_point(global_scope)
